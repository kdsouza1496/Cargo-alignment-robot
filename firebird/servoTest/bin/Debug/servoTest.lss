
bin\Debug\servoTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  00001a32  00001ac6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00001bce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001c0  00000000  00000000  00001bd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000002f2  00000000  00000000  00001d91  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000028f4  00000000  00000000  00002083  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000014fb  00000000  00000000  00004977  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000181d  00000000  00000000  00005e72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a0  00000000  00000000  00007690  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000046b  00000000  00000000  00007930  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000096e  00000000  00000000  00007d9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00008709  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e3       	ldi	r30, 0x32	; 50
      fc:	fa e1       	ldi	r31, 0x1A	; 26
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
     10e:	0e 94 3a 02 	call	0x474	; 0x474 <main>
     112:	0c 94 17 0d 	jmp	0x1a2e	; 0x1a2e <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <servo1_pin_config>:
#include <util/delay.h>


//Configure PORTB 5 pin for servo motor 1 operation
void servo1_pin_config (void)
{
     11a:	df 93       	push	r29
     11c:	cf 93       	push	r28
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x20;  //making PORTB 5 pin output
     122:	a4 e2       	ldi	r26, 0x24	; 36
     124:	b0 e0       	ldi	r27, 0x00	; 0
     126:	e4 e2       	ldi	r30, 0x24	; 36
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	80 81       	ld	r24, Z
     12c:	80 62       	ori	r24, 0x20	; 32
     12e:	8c 93       	st	X, r24
 PORTB = PORTB | 0x20; //setting PORTB 5 pin to logic 1
     130:	a5 e2       	ldi	r26, 0x25	; 37
     132:	b0 e0       	ldi	r27, 0x00	; 0
     134:	e5 e2       	ldi	r30, 0x25	; 37
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	80 81       	ld	r24, Z
     13a:	80 62       	ori	r24, 0x20	; 32
     13c:	8c 93       	st	X, r24
}
     13e:	cf 91       	pop	r28
     140:	df 91       	pop	r29
     142:	08 95       	ret

00000144 <servo2_pin_config>:

//Configure PORTB 6 pin for servo motor 2 operation
void servo2_pin_config (void)
{
     144:	df 93       	push	r29
     146:	cf 93       	push	r28
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x40;  //making PORTB 6 pin output
     14c:	a4 e2       	ldi	r26, 0x24	; 36
     14e:	b0 e0       	ldi	r27, 0x00	; 0
     150:	e4 e2       	ldi	r30, 0x24	; 36
     152:	f0 e0       	ldi	r31, 0x00	; 0
     154:	80 81       	ld	r24, Z
     156:	80 64       	ori	r24, 0x40	; 64
     158:	8c 93       	st	X, r24
 PORTB = PORTB | 0x40; //setting PORTB 6 pin to logic 1
     15a:	a5 e2       	ldi	r26, 0x25	; 37
     15c:	b0 e0       	ldi	r27, 0x00	; 0
     15e:	e5 e2       	ldi	r30, 0x25	; 37
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	80 81       	ld	r24, Z
     164:	80 64       	ori	r24, 0x40	; 64
     166:	8c 93       	st	X, r24
}
     168:	cf 91       	pop	r28
     16a:	df 91       	pop	r29
     16c:	08 95       	ret

0000016e <servo3_pin_config>:

//Configure PORTB 7 pin for servo motor 3 operation
void servo3_pin_config (void)
{
     16e:	df 93       	push	r29
     170:	cf 93       	push	r28
     172:	cd b7       	in	r28, 0x3d	; 61
     174:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x80;  //making PORTB 7 pin output
     176:	a4 e2       	ldi	r26, 0x24	; 36
     178:	b0 e0       	ldi	r27, 0x00	; 0
     17a:	e4 e2       	ldi	r30, 0x24	; 36
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	80 81       	ld	r24, Z
     180:	80 68       	ori	r24, 0x80	; 128
     182:	8c 93       	st	X, r24
 PORTB = PORTB | 0x80; //setting PORTB 7 pin to logic 1
     184:	a5 e2       	ldi	r26, 0x25	; 37
     186:	b0 e0       	ldi	r27, 0x00	; 0
     188:	e5 e2       	ldi	r30, 0x25	; 37
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	80 81       	ld	r24, Z
     18e:	80 68       	ori	r24, 0x80	; 128
     190:	8c 93       	st	X, r24
}
     192:	cf 91       	pop	r28
     194:	df 91       	pop	r29
     196:	08 95       	ret

00000198 <port_init>:

//Initialize the ports
void port_init(void)
{
     198:	df 93       	push	r29
     19a:	cf 93       	push	r28
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
 servo1_pin_config(); //Configure PORTB 5 pin for servo motor 1 operation
     1a0:	0e 94 8d 00 	call	0x11a	; 0x11a <servo1_pin_config>
 servo2_pin_config(); //Configure PORTB 6 pin for servo motor 2 operation
     1a4:	0e 94 a2 00 	call	0x144	; 0x144 <servo2_pin_config>
 servo3_pin_config(); //Configure PORTB 7 pin for servo motor 3 operation
     1a8:	0e 94 b7 00 	call	0x16e	; 0x16e <servo3_pin_config>
}
     1ac:	cf 91       	pop	r28
     1ae:	df 91       	pop	r29
     1b0:	08 95       	ret

000001b2 <timer1_init>:
//TIMER1 initialization in 10 bit fast PWM mode
//prescale:256
// WGM: 7) PWM 10bit fast, TOP=0x03FF
// actual value: 52.25Hz
void timer1_init(void)
{
     1b2:	df 93       	push	r29
     1b4:	cf 93       	push	r28
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
 TCCR1B = 0x00; //stop
     1ba:	e1 e8       	ldi	r30, 0x81	; 129
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	10 82       	st	Z, r1
 TCNT1H = 0xFC; //Counter high value to which OCR1xH value is to be compared with
     1c0:	e5 e8       	ldi	r30, 0x85	; 133
     1c2:	f0 e0       	ldi	r31, 0x00	; 0
     1c4:	8c ef       	ldi	r24, 0xFC	; 252
     1c6:	80 83       	st	Z, r24
 TCNT1L = 0x01;	//Counter low value to which OCR1xH value is to be compared with
     1c8:	e4 e8       	ldi	r30, 0x84	; 132
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	80 83       	st	Z, r24
 OCR1AH = 0x03;	//Output compare Register high value for servo 1
     1d0:	e9 e8       	ldi	r30, 0x89	; 137
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	83 e0       	ldi	r24, 0x03	; 3
     1d6:	80 83       	st	Z, r24
 OCR1AL = 0xFF;	//Output Compare Register low Value For servo 1
     1d8:	e8 e8       	ldi	r30, 0x88	; 136
     1da:	f0 e0       	ldi	r31, 0x00	; 0
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	80 83       	st	Z, r24
 OCR1BH = 0x03;	//Output compare Register high value for servo 2
     1e0:	eb e8       	ldi	r30, 0x8B	; 139
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	83 e0       	ldi	r24, 0x03	; 3
     1e6:	80 83       	st	Z, r24
 OCR1BL = 0xFF;	//Output Compare Register low Value For servo 2
     1e8:	ea e8       	ldi	r30, 0x8A	; 138
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	80 83       	st	Z, r24
 OCR1CH = 0x03;	//Output compare Register high value for servo 3
     1f0:	ed e8       	ldi	r30, 0x8D	; 141
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	83 e0       	ldi	r24, 0x03	; 3
     1f6:	80 83       	st	Z, r24
 OCR1CL = 0xFF;	//Output Compare Register low Value For servo 3
     1f8:	ec e8       	ldi	r30, 0x8C	; 140
     1fa:	f0 e0       	ldi	r31, 0x00	; 0
     1fc:	8f ef       	ldi	r24, 0xFF	; 255
     1fe:	80 83       	st	Z, r24
 ICR1H  = 0x03;
     200:	e7 e8       	ldi	r30, 0x87	; 135
     202:	f0 e0       	ldi	r31, 0x00	; 0
     204:	83 e0       	ldi	r24, 0x03	; 3
     206:	80 83       	st	Z, r24
 ICR1L  = 0xFF;
     208:	e6 e8       	ldi	r30, 0x86	; 134
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	80 83       	st	Z, r24
 TCCR1A = 0xAB; /*{COM1A1=1, COM1A0=0; COM1B1=1, COM1B0=0; COM1C1=1 COM1C0=0}
     210:	e0 e8       	ldi	r30, 0x80	; 128
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	8b ea       	ldi	r24, 0xAB	; 171
     216:	80 83       	st	Z, r24
 					For Overriding normal port functionality to OCRnA outputs.
				  {WGM11=1, WGM10=1} Along With WGM12 in TCCR1B for Selecting FAST PWM Mode*/
 TCCR1C = 0x00;
     218:	e2 e8       	ldi	r30, 0x82	; 130
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	10 82       	st	Z, r1
 TCCR1B = 0x0C; //WGM12=1; CS12=1, CS11=0, CS10=0 (Prescaler=256)
     21e:	e1 e8       	ldi	r30, 0x81	; 129
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	8c e0       	ldi	r24, 0x0C	; 12
     224:	80 83       	st	Z, r24
}
     226:	cf 91       	pop	r28
     228:	df 91       	pop	r29
     22a:	08 95       	ret

0000022c <init_devices>:


//Function to initialize all the peripherals
void init_devices(void)
{
     22c:	df 93       	push	r29
     22e:	cf 93       	push	r28
     230:	cd b7       	in	r28, 0x3d	; 61
     232:	de b7       	in	r29, 0x3e	; 62
 cli(); //disable all interrupts
     234:	f8 94       	cli
 port_init();
     236:	0e 94 cc 00 	call	0x198	; 0x198 <port_init>
 timer1_init();
     23a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <timer1_init>
 sei(); //re-enable interrupts
     23e:	78 94       	sei
}
     240:	cf 91       	pop	r28
     242:	df 91       	pop	r29
     244:	08 95       	ret

00000246 <servo_1>:


//Function to rotate Servo 1 by a specified angle in the multiples of 1.86 degrees
void servo_1(unsigned char degrees)
{
     246:	0f 93       	push	r16
     248:	1f 93       	push	r17
     24a:	df 93       	push	r29
     24c:	cf 93       	push	r28
     24e:	00 d0       	rcall	.+0      	; 0x250 <servo_1+0xa>
     250:	0f 92       	push	r0
     252:	0f 92       	push	r0
     254:	cd b7       	in	r28, 0x3d	; 61
     256:	de b7       	in	r29, 0x3e	; 62
     258:	8d 83       	std	Y+5, r24	; 0x05
 float PositionPanServo = 0;
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	a0 e0       	ldi	r26, 0x00	; 0
     260:	b0 e0       	ldi	r27, 0x00	; 0
     262:	89 83       	std	Y+1, r24	; 0x01
     264:	9a 83       	std	Y+2, r25	; 0x02
     266:	ab 83       	std	Y+3, r26	; 0x03
     268:	bc 83       	std	Y+4, r27	; 0x04
  PositionPanServo = ((float)degrees / 1.86) + 35.0;
     26a:	8d 81       	ldd	r24, Y+5	; 0x05
     26c:	88 2f       	mov	r24, r24
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	a0 e0       	ldi	r26, 0x00	; 0
     272:	b0 e0       	ldi	r27, 0x00	; 0
     274:	bc 01       	movw	r22, r24
     276:	cd 01       	movw	r24, r26
     278:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__floatunsisf>
     27c:	dc 01       	movw	r26, r24
     27e:	cb 01       	movw	r24, r22
     280:	bc 01       	movw	r22, r24
     282:	cd 01       	movw	r24, r26
     284:	2b e7       	ldi	r18, 0x7B	; 123
     286:	34 e1       	ldi	r19, 0x14	; 20
     288:	4e ee       	ldi	r20, 0xEE	; 238
     28a:	5f e3       	ldi	r21, 0x3F	; 63
     28c:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__divsf3>
     290:	dc 01       	movw	r26, r24
     292:	cb 01       	movw	r24, r22
     294:	bc 01       	movw	r22, r24
     296:	cd 01       	movw	r24, r26
     298:	20 e0       	ldi	r18, 0x00	; 0
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	4c e0       	ldi	r20, 0x0C	; 12
     29e:	52 e4       	ldi	r21, 0x42	; 66
     2a0:	0e 94 bb 07 	call	0xf76	; 0xf76 <__addsf3>
     2a4:	dc 01       	movw	r26, r24
     2a6:	cb 01       	movw	r24, r22
     2a8:	89 83       	std	Y+1, r24	; 0x01
     2aa:	9a 83       	std	Y+2, r25	; 0x02
     2ac:	ab 83       	std	Y+3, r26	; 0x03
     2ae:	bc 83       	std	Y+4, r27	; 0x04
 OCR1AH = 0x00;
     2b0:	e9 e8       	ldi	r30, 0x89	; 137
     2b2:	f0 e0       	ldi	r31, 0x00	; 0
     2b4:	10 82       	st	Z, r1
 OCR1AL = (unsigned char) PositionPanServo;
     2b6:	08 e8       	ldi	r16, 0x88	; 136
     2b8:	10 e0       	ldi	r17, 0x00	; 0
     2ba:	69 81       	ldd	r22, Y+1	; 0x01
     2bc:	7a 81       	ldd	r23, Y+2	; 0x02
     2be:	8b 81       	ldd	r24, Y+3	; 0x03
     2c0:	9c 81       	ldd	r25, Y+4	; 0x04
     2c2:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     2c6:	dc 01       	movw	r26, r24
     2c8:	cb 01       	movw	r24, r22
     2ca:	f8 01       	movw	r30, r16
     2cc:	80 83       	st	Z, r24
}
     2ce:	0f 90       	pop	r0
     2d0:	0f 90       	pop	r0
     2d2:	0f 90       	pop	r0
     2d4:	0f 90       	pop	r0
     2d6:	0f 90       	pop	r0
     2d8:	cf 91       	pop	r28
     2da:	df 91       	pop	r29
     2dc:	1f 91       	pop	r17
     2de:	0f 91       	pop	r16
     2e0:	08 95       	ret

000002e2 <servo_2>:


//Function to rotate Servo 2 by a specified angle in the multiples of 1.86 degrees
void servo_2(unsigned char degrees)
{
     2e2:	0f 93       	push	r16
     2e4:	1f 93       	push	r17
     2e6:	df 93       	push	r29
     2e8:	cf 93       	push	r28
     2ea:	00 d0       	rcall	.+0      	; 0x2ec <servo_2+0xa>
     2ec:	0f 92       	push	r0
     2ee:	0f 92       	push	r0
     2f0:	cd b7       	in	r28, 0x3d	; 61
     2f2:	de b7       	in	r29, 0x3e	; 62
     2f4:	8d 83       	std	Y+5, r24	; 0x05
 float PositionTiltServo = 0;
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	a0 e0       	ldi	r26, 0x00	; 0
     2fc:	b0 e0       	ldi	r27, 0x00	; 0
     2fe:	89 83       	std	Y+1, r24	; 0x01
     300:	9a 83       	std	Y+2, r25	; 0x02
     302:	ab 83       	std	Y+3, r26	; 0x03
     304:	bc 83       	std	Y+4, r27	; 0x04
 PositionTiltServo = ((float)degrees / 1.86) + 35.0;
     306:	8d 81       	ldd	r24, Y+5	; 0x05
     308:	88 2f       	mov	r24, r24
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	a0 e0       	ldi	r26, 0x00	; 0
     30e:	b0 e0       	ldi	r27, 0x00	; 0
     310:	bc 01       	movw	r22, r24
     312:	cd 01       	movw	r24, r26
     314:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__floatunsisf>
     318:	dc 01       	movw	r26, r24
     31a:	cb 01       	movw	r24, r22
     31c:	bc 01       	movw	r22, r24
     31e:	cd 01       	movw	r24, r26
     320:	2b e7       	ldi	r18, 0x7B	; 123
     322:	34 e1       	ldi	r19, 0x14	; 20
     324:	4e ee       	ldi	r20, 0xEE	; 238
     326:	5f e3       	ldi	r21, 0x3F	; 63
     328:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__divsf3>
     32c:	dc 01       	movw	r26, r24
     32e:	cb 01       	movw	r24, r22
     330:	bc 01       	movw	r22, r24
     332:	cd 01       	movw	r24, r26
     334:	20 e0       	ldi	r18, 0x00	; 0
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	4c e0       	ldi	r20, 0x0C	; 12
     33a:	52 e4       	ldi	r21, 0x42	; 66
     33c:	0e 94 bb 07 	call	0xf76	; 0xf76 <__addsf3>
     340:	dc 01       	movw	r26, r24
     342:	cb 01       	movw	r24, r22
     344:	89 83       	std	Y+1, r24	; 0x01
     346:	9a 83       	std	Y+2, r25	; 0x02
     348:	ab 83       	std	Y+3, r26	; 0x03
     34a:	bc 83       	std	Y+4, r27	; 0x04
 OCR1BH = 0x00;
     34c:	eb e8       	ldi	r30, 0x8B	; 139
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	10 82       	st	Z, r1
 OCR1BL = (unsigned char) PositionTiltServo;
     352:	0a e8       	ldi	r16, 0x8A	; 138
     354:	10 e0       	ldi	r17, 0x00	; 0
     356:	69 81       	ldd	r22, Y+1	; 0x01
     358:	7a 81       	ldd	r23, Y+2	; 0x02
     35a:	8b 81       	ldd	r24, Y+3	; 0x03
     35c:	9c 81       	ldd	r25, Y+4	; 0x04
     35e:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     362:	dc 01       	movw	r26, r24
     364:	cb 01       	movw	r24, r22
     366:	f8 01       	movw	r30, r16
     368:	80 83       	st	Z, r24
}
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
     374:	cf 91       	pop	r28
     376:	df 91       	pop	r29
     378:	1f 91       	pop	r17
     37a:	0f 91       	pop	r16
     37c:	08 95       	ret

0000037e <servo_3>:

//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void servo_3(unsigned char degrees)
{
     37e:	0f 93       	push	r16
     380:	1f 93       	push	r17
     382:	df 93       	push	r29
     384:	cf 93       	push	r28
     386:	00 d0       	rcall	.+0      	; 0x388 <servo_3+0xa>
     388:	0f 92       	push	r0
     38a:	0f 92       	push	r0
     38c:	cd b7       	in	r28, 0x3d	; 61
     38e:	de b7       	in	r29, 0x3e	; 62
     390:	8d 83       	std	Y+5, r24	; 0x05
 float PositionServo = 0;
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	a0 e0       	ldi	r26, 0x00	; 0
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	89 83       	std	Y+1, r24	; 0x01
     39c:	9a 83       	std	Y+2, r25	; 0x02
     39e:	ab 83       	std	Y+3, r26	; 0x03
     3a0:	bc 83       	std	Y+4, r27	; 0x04
 PositionServo = ((float)degrees / 1.86) + 35.0;
     3a2:	8d 81       	ldd	r24, Y+5	; 0x05
     3a4:	88 2f       	mov	r24, r24
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	a0 e0       	ldi	r26, 0x00	; 0
     3aa:	b0 e0       	ldi	r27, 0x00	; 0
     3ac:	bc 01       	movw	r22, r24
     3ae:	cd 01       	movw	r24, r26
     3b0:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__floatunsisf>
     3b4:	dc 01       	movw	r26, r24
     3b6:	cb 01       	movw	r24, r22
     3b8:	bc 01       	movw	r22, r24
     3ba:	cd 01       	movw	r24, r26
     3bc:	2b e7       	ldi	r18, 0x7B	; 123
     3be:	34 e1       	ldi	r19, 0x14	; 20
     3c0:	4e ee       	ldi	r20, 0xEE	; 238
     3c2:	5f e3       	ldi	r21, 0x3F	; 63
     3c4:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__divsf3>
     3c8:	dc 01       	movw	r26, r24
     3ca:	cb 01       	movw	r24, r22
     3cc:	bc 01       	movw	r22, r24
     3ce:	cd 01       	movw	r24, r26
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	4c e0       	ldi	r20, 0x0C	; 12
     3d6:	52 e4       	ldi	r21, 0x42	; 66
     3d8:	0e 94 bb 07 	call	0xf76	; 0xf76 <__addsf3>
     3dc:	dc 01       	movw	r26, r24
     3de:	cb 01       	movw	r24, r22
     3e0:	89 83       	std	Y+1, r24	; 0x01
     3e2:	9a 83       	std	Y+2, r25	; 0x02
     3e4:	ab 83       	std	Y+3, r26	; 0x03
     3e6:	bc 83       	std	Y+4, r27	; 0x04
 OCR1CH = 0x00;
     3e8:	ed e8       	ldi	r30, 0x8D	; 141
     3ea:	f0 e0       	ldi	r31, 0x00	; 0
     3ec:	10 82       	st	Z, r1
 OCR1CL = (unsigned char) PositionServo;
     3ee:	0c e8       	ldi	r16, 0x8C	; 140
     3f0:	10 e0       	ldi	r17, 0x00	; 0
     3f2:	69 81       	ldd	r22, Y+1	; 0x01
     3f4:	7a 81       	ldd	r23, Y+2	; 0x02
     3f6:	8b 81       	ldd	r24, Y+3	; 0x03
     3f8:	9c 81       	ldd	r25, Y+4	; 0x04
     3fa:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     3fe:	dc 01       	movw	r26, r24
     400:	cb 01       	movw	r24, r22
     402:	f8 01       	movw	r30, r16
     404:	80 83       	st	Z, r24
}
     406:	0f 90       	pop	r0
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
     410:	cf 91       	pop	r28
     412:	df 91       	pop	r29
     414:	1f 91       	pop	r17
     416:	0f 91       	pop	r16
     418:	08 95       	ret

0000041a <servo_1_free>:
//servo_free functions unlocks the servo motors from the any angle
//and make them free by giving 100% duty cycle at the PWM. This function can be used to
//reduce the power consumption of the motor if it is holding load against the gravity.

void servo_1_free (void) //makes servo 1 free rotating
{
     41a:	df 93       	push	r29
     41c:	cf 93       	push	r28
     41e:	cd b7       	in	r28, 0x3d	; 61
     420:	de b7       	in	r29, 0x3e	; 62
 OCR1AH = 0x03;
     422:	e9 e8       	ldi	r30, 0x89	; 137
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	83 e0       	ldi	r24, 0x03	; 3
     428:	80 83       	st	Z, r24
 OCR1AL = 0xFF; //Servo 1 off
     42a:	e8 e8       	ldi	r30, 0x88	; 136
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	8f ef       	ldi	r24, 0xFF	; 255
     430:	80 83       	st	Z, r24
}
     432:	cf 91       	pop	r28
     434:	df 91       	pop	r29
     436:	08 95       	ret

00000438 <servo_2_free>:

void servo_2_free (void) //makes servo 2 free rotating
{
     438:	df 93       	push	r29
     43a:	cf 93       	push	r28
     43c:	cd b7       	in	r28, 0x3d	; 61
     43e:	de b7       	in	r29, 0x3e	; 62
 OCR1BH = 0x03;
     440:	eb e8       	ldi	r30, 0x8B	; 139
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	83 e0       	ldi	r24, 0x03	; 3
     446:	80 83       	st	Z, r24
 OCR1BL = 0xFF; //Servo 2 off
     448:	ea e8       	ldi	r30, 0x8A	; 138
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	8f ef       	ldi	r24, 0xFF	; 255
     44e:	80 83       	st	Z, r24
}
     450:	cf 91       	pop	r28
     452:	df 91       	pop	r29
     454:	08 95       	ret

00000456 <servo_3_free>:

void servo_3_free (void) //makes servo 3 free rotating
{
     456:	df 93       	push	r29
     458:	cf 93       	push	r28
     45a:	cd b7       	in	r28, 0x3d	; 61
     45c:	de b7       	in	r29, 0x3e	; 62
 OCR1CH = 0x03;
     45e:	ed e8       	ldi	r30, 0x8D	; 141
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	83 e0       	ldi	r24, 0x03	; 3
     464:	80 83       	st	Z, r24
 OCR1CL = 0xFF; //Servo 3 off
     466:	ec e8       	ldi	r30, 0x8C	; 140
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	80 83       	st	Z, r24
}
     46e:	cf 91       	pop	r28
     470:	df 91       	pop	r29
     472:	08 95       	ret

00000474 <main>:

//Main function
void main(void)
{
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	df 93       	push	r29
     47a:	cf 93       	push	r28
     47c:	cd b7       	in	r28, 0x3d	; 61
     47e:	de b7       	in	r29, 0x3e	; 62
     480:	c2 56       	subi	r28, 0x62	; 98
     482:	d0 40       	sbci	r29, 0x00	; 0
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	f8 94       	cli
     488:	de bf       	out	0x3e, r29	; 62
     48a:	0f be       	out	0x3f, r0	; 63
     48c:	cd bf       	out	0x3d, r28	; 61

 init_devices();
     48e:	0e 94 16 01 	call	0x22c	; 0x22c <init_devices>

 while(1)
 {

 servo_3(0);
     492:	80 e0       	ldi	r24, 0x00	; 0
     494:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
     498:	fe 01       	movw	r30, r28
     49a:	e1 5a       	subi	r30, 0xA1	; 161
     49c:	ff 4f       	sbci	r31, 0xFF	; 255
     49e:	80 e0       	ldi	r24, 0x00	; 0
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	aa ef       	ldi	r26, 0xFA	; 250
     4a4:	b4 e4       	ldi	r27, 0x44	; 68
     4a6:	80 83       	st	Z, r24
     4a8:	91 83       	std	Z+1, r25	; 0x01
     4aa:	a2 83       	std	Z+2, r26	; 0x02
     4ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4ae:	8e 01       	movw	r16, r28
     4b0:	05 5a       	subi	r16, 0xA5	; 165
     4b2:	1f 4f       	sbci	r17, 0xFF	; 255
     4b4:	fe 01       	movw	r30, r28
     4b6:	e1 5a       	subi	r30, 0xA1	; 161
     4b8:	ff 4f       	sbci	r31, 0xFF	; 255
     4ba:	60 81       	ld	r22, Z
     4bc:	71 81       	ldd	r23, Z+1	; 0x01
     4be:	82 81       	ldd	r24, Z+2	; 0x02
     4c0:	93 81       	ldd	r25, Z+3	; 0x03
     4c2:	26 e6       	ldi	r18, 0x66	; 102
     4c4:	36 e6       	ldi	r19, 0x66	; 102
     4c6:	46 e6       	ldi	r20, 0x66	; 102
     4c8:	55 e4       	ldi	r21, 0x45	; 69
     4ca:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     4ce:	dc 01       	movw	r26, r24
     4d0:	cb 01       	movw	r24, r22
     4d2:	f8 01       	movw	r30, r16
     4d4:	80 83       	st	Z, r24
     4d6:	91 83       	std	Z+1, r25	; 0x01
     4d8:	a2 83       	std	Z+2, r26	; 0x02
     4da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     4dc:	fe 01       	movw	r30, r28
     4de:	e5 5a       	subi	r30, 0xA5	; 165
     4e0:	ff 4f       	sbci	r31, 0xFF	; 255
     4e2:	60 81       	ld	r22, Z
     4e4:	71 81       	ldd	r23, Z+1	; 0x01
     4e6:	82 81       	ldd	r24, Z+2	; 0x02
     4e8:	93 81       	ldd	r25, Z+3	; 0x03
     4ea:	20 e0       	ldi	r18, 0x00	; 0
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	40 e8       	ldi	r20, 0x80	; 128
     4f0:	5f e3       	ldi	r21, 0x3F	; 63
     4f2:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__ltsf2>
     4f6:	88 23       	and	r24, r24
     4f8:	44 f4       	brge	.+16     	; 0x50a <main+0x96>
		__ticks = 1;
     4fa:	fe 01       	movw	r30, r28
     4fc:	e7 5a       	subi	r30, 0xA7	; 167
     4fe:	ff 4f       	sbci	r31, 0xFF	; 255
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	91 83       	std	Z+1, r25	; 0x01
     506:	80 83       	st	Z, r24
     508:	64 c0       	rjmp	.+200    	; 0x5d2 <main+0x15e>
	else if (__tmp > 65535)
     50a:	fe 01       	movw	r30, r28
     50c:	e5 5a       	subi	r30, 0xA5	; 165
     50e:	ff 4f       	sbci	r31, 0xFF	; 255
     510:	60 81       	ld	r22, Z
     512:	71 81       	ldd	r23, Z+1	; 0x01
     514:	82 81       	ldd	r24, Z+2	; 0x02
     516:	93 81       	ldd	r25, Z+3	; 0x03
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	3f ef       	ldi	r19, 0xFF	; 255
     51c:	4f e7       	ldi	r20, 0x7F	; 127
     51e:	57 e4       	ldi	r21, 0x47	; 71
     520:	0e 94 8e 09 	call	0x131c	; 0x131c <__gtsf2>
     524:	18 16       	cp	r1, r24
     526:	0c f0       	brlt	.+2      	; 0x52a <main+0xb6>
     528:	43 c0       	rjmp	.+134    	; 0x5b0 <main+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     52a:	fe 01       	movw	r30, r28
     52c:	e1 5a       	subi	r30, 0xA1	; 161
     52e:	ff 4f       	sbci	r31, 0xFF	; 255
     530:	60 81       	ld	r22, Z
     532:	71 81       	ldd	r23, Z+1	; 0x01
     534:	82 81       	ldd	r24, Z+2	; 0x02
     536:	93 81       	ldd	r25, Z+3	; 0x03
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	40 e2       	ldi	r20, 0x20	; 32
     53e:	51 e4       	ldi	r21, 0x41	; 65
     540:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     544:	dc 01       	movw	r26, r24
     546:	cb 01       	movw	r24, r22
     548:	8e 01       	movw	r16, r28
     54a:	07 5a       	subi	r16, 0xA7	; 167
     54c:	1f 4f       	sbci	r17, 0xFF	; 255
     54e:	bc 01       	movw	r22, r24
     550:	cd 01       	movw	r24, r26
     552:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     556:	dc 01       	movw	r26, r24
     558:	cb 01       	movw	r24, r22
     55a:	f8 01       	movw	r30, r16
     55c:	91 83       	std	Z+1, r25	; 0x01
     55e:	80 83       	st	Z, r24
     560:	1f c0       	rjmp	.+62     	; 0x5a0 <main+0x12c>
     562:	fe 01       	movw	r30, r28
     564:	e9 5a       	subi	r30, 0xA9	; 169
     566:	ff 4f       	sbci	r31, 0xFF	; 255
     568:	80 e7       	ldi	r24, 0x70	; 112
     56a:	91 e0       	ldi	r25, 0x01	; 1
     56c:	91 83       	std	Z+1, r25	; 0x01
     56e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     570:	fe 01       	movw	r30, r28
     572:	e9 5a       	subi	r30, 0xA9	; 169
     574:	ff 4f       	sbci	r31, 0xFF	; 255
     576:	80 81       	ld	r24, Z
     578:	91 81       	ldd	r25, Z+1	; 0x01
     57a:	01 97       	sbiw	r24, 0x01	; 1
     57c:	f1 f7       	brne	.-4      	; 0x57a <main+0x106>
     57e:	fe 01       	movw	r30, r28
     580:	e9 5a       	subi	r30, 0xA9	; 169
     582:	ff 4f       	sbci	r31, 0xFF	; 255
     584:	91 83       	std	Z+1, r25	; 0x01
     586:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     588:	de 01       	movw	r26, r28
     58a:	a7 5a       	subi	r26, 0xA7	; 167
     58c:	bf 4f       	sbci	r27, 0xFF	; 255
     58e:	fe 01       	movw	r30, r28
     590:	e7 5a       	subi	r30, 0xA7	; 167
     592:	ff 4f       	sbci	r31, 0xFF	; 255
     594:	80 81       	ld	r24, Z
     596:	91 81       	ldd	r25, Z+1	; 0x01
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	11 96       	adiw	r26, 0x01	; 1
     59c:	9c 93       	st	X, r25
     59e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5a0:	fe 01       	movw	r30, r28
     5a2:	e7 5a       	subi	r30, 0xA7	; 167
     5a4:	ff 4f       	sbci	r31, 0xFF	; 255
     5a6:	80 81       	ld	r24, Z
     5a8:	91 81       	ldd	r25, Z+1	; 0x01
     5aa:	00 97       	sbiw	r24, 0x00	; 0
     5ac:	d1 f6       	brne	.-76     	; 0x562 <main+0xee>
     5ae:	27 c0       	rjmp	.+78     	; 0x5fe <main+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5b0:	8e 01       	movw	r16, r28
     5b2:	07 5a       	subi	r16, 0xA7	; 167
     5b4:	1f 4f       	sbci	r17, 0xFF	; 255
     5b6:	fe 01       	movw	r30, r28
     5b8:	e5 5a       	subi	r30, 0xA5	; 165
     5ba:	ff 4f       	sbci	r31, 0xFF	; 255
     5bc:	60 81       	ld	r22, Z
     5be:	71 81       	ldd	r23, Z+1	; 0x01
     5c0:	82 81       	ldd	r24, Z+2	; 0x02
     5c2:	93 81       	ldd	r25, Z+3	; 0x03
     5c4:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     5c8:	dc 01       	movw	r26, r24
     5ca:	cb 01       	movw	r24, r22
     5cc:	f8 01       	movw	r30, r16
     5ce:	91 83       	std	Z+1, r25	; 0x01
     5d0:	80 83       	st	Z, r24
     5d2:	de 01       	movw	r26, r28
     5d4:	ab 5a       	subi	r26, 0xAB	; 171
     5d6:	bf 4f       	sbci	r27, 0xFF	; 255
     5d8:	fe 01       	movw	r30, r28
     5da:	e7 5a       	subi	r30, 0xA7	; 167
     5dc:	ff 4f       	sbci	r31, 0xFF	; 255
     5de:	80 81       	ld	r24, Z
     5e0:	91 81       	ldd	r25, Z+1	; 0x01
     5e2:	8d 93       	st	X+, r24
     5e4:	9c 93       	st	X, r25
     5e6:	fe 01       	movw	r30, r28
     5e8:	eb 5a       	subi	r30, 0xAB	; 171
     5ea:	ff 4f       	sbci	r31, 0xFF	; 255
     5ec:	80 81       	ld	r24, Z
     5ee:	91 81       	ldd	r25, Z+1	; 0x01
     5f0:	01 97       	sbiw	r24, 0x01	; 1
     5f2:	f1 f7       	brne	.-4      	; 0x5f0 <main+0x17c>
     5f4:	fe 01       	movw	r30, r28
     5f6:	eb 5a       	subi	r30, 0xAB	; 171
     5f8:	ff 4f       	sbci	r31, 0xFF	; 255
     5fa:	91 83       	std	Z+1, r25	; 0x01
     5fc:	80 83       	st	Z, r24
 _delay_ms(2000);
 servo_3(30);
     5fe:	8e e1       	ldi	r24, 0x1E	; 30
     600:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
     604:	fe 01       	movw	r30, r28
     606:	ef 5a       	subi	r30, 0xAF	; 175
     608:	ff 4f       	sbci	r31, 0xFF	; 255
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	aa ef       	ldi	r26, 0xFA	; 250
     610:	b4 e4       	ldi	r27, 0x44	; 68
     612:	80 83       	st	Z, r24
     614:	91 83       	std	Z+1, r25	; 0x01
     616:	a2 83       	std	Z+2, r26	; 0x02
     618:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     61a:	8e 01       	movw	r16, r28
     61c:	03 5b       	subi	r16, 0xB3	; 179
     61e:	1f 4f       	sbci	r17, 0xFF	; 255
     620:	fe 01       	movw	r30, r28
     622:	ef 5a       	subi	r30, 0xAF	; 175
     624:	ff 4f       	sbci	r31, 0xFF	; 255
     626:	60 81       	ld	r22, Z
     628:	71 81       	ldd	r23, Z+1	; 0x01
     62a:	82 81       	ldd	r24, Z+2	; 0x02
     62c:	93 81       	ldd	r25, Z+3	; 0x03
     62e:	26 e6       	ldi	r18, 0x66	; 102
     630:	36 e6       	ldi	r19, 0x66	; 102
     632:	46 e6       	ldi	r20, 0x66	; 102
     634:	55 e4       	ldi	r21, 0x45	; 69
     636:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     63a:	dc 01       	movw	r26, r24
     63c:	cb 01       	movw	r24, r22
     63e:	f8 01       	movw	r30, r16
     640:	80 83       	st	Z, r24
     642:	91 83       	std	Z+1, r25	; 0x01
     644:	a2 83       	std	Z+2, r26	; 0x02
     646:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     648:	fe 01       	movw	r30, r28
     64a:	e3 5b       	subi	r30, 0xB3	; 179
     64c:	ff 4f       	sbci	r31, 0xFF	; 255
     64e:	60 81       	ld	r22, Z
     650:	71 81       	ldd	r23, Z+1	; 0x01
     652:	82 81       	ldd	r24, Z+2	; 0x02
     654:	93 81       	ldd	r25, Z+3	; 0x03
     656:	20 e0       	ldi	r18, 0x00	; 0
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	40 e8       	ldi	r20, 0x80	; 128
     65c:	5f e3       	ldi	r21, 0x3F	; 63
     65e:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__ltsf2>
     662:	88 23       	and	r24, r24
     664:	44 f4       	brge	.+16     	; 0x676 <main+0x202>
		__ticks = 1;
     666:	fe 01       	movw	r30, r28
     668:	e5 5b       	subi	r30, 0xB5	; 181
     66a:	ff 4f       	sbci	r31, 0xFF	; 255
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	91 83       	std	Z+1, r25	; 0x01
     672:	80 83       	st	Z, r24
     674:	64 c0       	rjmp	.+200    	; 0x73e <main+0x2ca>
	else if (__tmp > 65535)
     676:	fe 01       	movw	r30, r28
     678:	e3 5b       	subi	r30, 0xB3	; 179
     67a:	ff 4f       	sbci	r31, 0xFF	; 255
     67c:	60 81       	ld	r22, Z
     67e:	71 81       	ldd	r23, Z+1	; 0x01
     680:	82 81       	ldd	r24, Z+2	; 0x02
     682:	93 81       	ldd	r25, Z+3	; 0x03
     684:	20 e0       	ldi	r18, 0x00	; 0
     686:	3f ef       	ldi	r19, 0xFF	; 255
     688:	4f e7       	ldi	r20, 0x7F	; 127
     68a:	57 e4       	ldi	r21, 0x47	; 71
     68c:	0e 94 8e 09 	call	0x131c	; 0x131c <__gtsf2>
     690:	18 16       	cp	r1, r24
     692:	0c f0       	brlt	.+2      	; 0x696 <main+0x222>
     694:	43 c0       	rjmp	.+134    	; 0x71c <main+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     696:	fe 01       	movw	r30, r28
     698:	ef 5a       	subi	r30, 0xAF	; 175
     69a:	ff 4f       	sbci	r31, 0xFF	; 255
     69c:	60 81       	ld	r22, Z
     69e:	71 81       	ldd	r23, Z+1	; 0x01
     6a0:	82 81       	ldd	r24, Z+2	; 0x02
     6a2:	93 81       	ldd	r25, Z+3	; 0x03
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	40 e2       	ldi	r20, 0x20	; 32
     6aa:	51 e4       	ldi	r21, 0x41	; 65
     6ac:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     6b0:	dc 01       	movw	r26, r24
     6b2:	cb 01       	movw	r24, r22
     6b4:	8e 01       	movw	r16, r28
     6b6:	05 5b       	subi	r16, 0xB5	; 181
     6b8:	1f 4f       	sbci	r17, 0xFF	; 255
     6ba:	bc 01       	movw	r22, r24
     6bc:	cd 01       	movw	r24, r26
     6be:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     6c2:	dc 01       	movw	r26, r24
     6c4:	cb 01       	movw	r24, r22
     6c6:	f8 01       	movw	r30, r16
     6c8:	91 83       	std	Z+1, r25	; 0x01
     6ca:	80 83       	st	Z, r24
     6cc:	1f c0       	rjmp	.+62     	; 0x70c <main+0x298>
     6ce:	fe 01       	movw	r30, r28
     6d0:	e7 5b       	subi	r30, 0xB7	; 183
     6d2:	ff 4f       	sbci	r31, 0xFF	; 255
     6d4:	80 e7       	ldi	r24, 0x70	; 112
     6d6:	91 e0       	ldi	r25, 0x01	; 1
     6d8:	91 83       	std	Z+1, r25	; 0x01
     6da:	80 83       	st	Z, r24
     6dc:	fe 01       	movw	r30, r28
     6de:	e7 5b       	subi	r30, 0xB7	; 183
     6e0:	ff 4f       	sbci	r31, 0xFF	; 255
     6e2:	80 81       	ld	r24, Z
     6e4:	91 81       	ldd	r25, Z+1	; 0x01
     6e6:	01 97       	sbiw	r24, 0x01	; 1
     6e8:	f1 f7       	brne	.-4      	; 0x6e6 <main+0x272>
     6ea:	fe 01       	movw	r30, r28
     6ec:	e7 5b       	subi	r30, 0xB7	; 183
     6ee:	ff 4f       	sbci	r31, 0xFF	; 255
     6f0:	91 83       	std	Z+1, r25	; 0x01
     6f2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6f4:	de 01       	movw	r26, r28
     6f6:	a5 5b       	subi	r26, 0xB5	; 181
     6f8:	bf 4f       	sbci	r27, 0xFF	; 255
     6fa:	fe 01       	movw	r30, r28
     6fc:	e5 5b       	subi	r30, 0xB5	; 181
     6fe:	ff 4f       	sbci	r31, 0xFF	; 255
     700:	80 81       	ld	r24, Z
     702:	91 81       	ldd	r25, Z+1	; 0x01
     704:	01 97       	sbiw	r24, 0x01	; 1
     706:	11 96       	adiw	r26, 0x01	; 1
     708:	9c 93       	st	X, r25
     70a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     70c:	fe 01       	movw	r30, r28
     70e:	e5 5b       	subi	r30, 0xB5	; 181
     710:	ff 4f       	sbci	r31, 0xFF	; 255
     712:	80 81       	ld	r24, Z
     714:	91 81       	ldd	r25, Z+1	; 0x01
     716:	00 97       	sbiw	r24, 0x00	; 0
     718:	d1 f6       	brne	.-76     	; 0x6ce <main+0x25a>
     71a:	27 c0       	rjmp	.+78     	; 0x76a <main+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     71c:	8e 01       	movw	r16, r28
     71e:	05 5b       	subi	r16, 0xB5	; 181
     720:	1f 4f       	sbci	r17, 0xFF	; 255
     722:	fe 01       	movw	r30, r28
     724:	e3 5b       	subi	r30, 0xB3	; 179
     726:	ff 4f       	sbci	r31, 0xFF	; 255
     728:	60 81       	ld	r22, Z
     72a:	71 81       	ldd	r23, Z+1	; 0x01
     72c:	82 81       	ldd	r24, Z+2	; 0x02
     72e:	93 81       	ldd	r25, Z+3	; 0x03
     730:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     734:	dc 01       	movw	r26, r24
     736:	cb 01       	movw	r24, r22
     738:	f8 01       	movw	r30, r16
     73a:	91 83       	std	Z+1, r25	; 0x01
     73c:	80 83       	st	Z, r24
     73e:	de 01       	movw	r26, r28
     740:	a9 5b       	subi	r26, 0xB9	; 185
     742:	bf 4f       	sbci	r27, 0xFF	; 255
     744:	fe 01       	movw	r30, r28
     746:	e5 5b       	subi	r30, 0xB5	; 181
     748:	ff 4f       	sbci	r31, 0xFF	; 255
     74a:	80 81       	ld	r24, Z
     74c:	91 81       	ldd	r25, Z+1	; 0x01
     74e:	8d 93       	st	X+, r24
     750:	9c 93       	st	X, r25
     752:	fe 01       	movw	r30, r28
     754:	e9 5b       	subi	r30, 0xB9	; 185
     756:	ff 4f       	sbci	r31, 0xFF	; 255
     758:	80 81       	ld	r24, Z
     75a:	91 81       	ldd	r25, Z+1	; 0x01
     75c:	01 97       	sbiw	r24, 0x01	; 1
     75e:	f1 f7       	brne	.-4      	; 0x75c <main+0x2e8>
     760:	fe 01       	movw	r30, r28
     762:	e9 5b       	subi	r30, 0xB9	; 185
     764:	ff 4f       	sbci	r31, 0xFF	; 255
     766:	91 83       	std	Z+1, r25	; 0x01
     768:	80 83       	st	Z, r24
 _delay_ms(2000);
 servo_3(60);
     76a:	8c e3       	ldi	r24, 0x3C	; 60
     76c:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
     770:	fe 01       	movw	r30, r28
     772:	ed 5b       	subi	r30, 0xBD	; 189
     774:	ff 4f       	sbci	r31, 0xFF	; 255
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	aa ef       	ldi	r26, 0xFA	; 250
     77c:	b4 e4       	ldi	r27, 0x44	; 68
     77e:	80 83       	st	Z, r24
     780:	91 83       	std	Z+1, r25	; 0x01
     782:	a2 83       	std	Z+2, r26	; 0x02
     784:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     786:	8e 01       	movw	r16, r28
     788:	01 5c       	subi	r16, 0xC1	; 193
     78a:	1f 4f       	sbci	r17, 0xFF	; 255
     78c:	fe 01       	movw	r30, r28
     78e:	ed 5b       	subi	r30, 0xBD	; 189
     790:	ff 4f       	sbci	r31, 0xFF	; 255
     792:	60 81       	ld	r22, Z
     794:	71 81       	ldd	r23, Z+1	; 0x01
     796:	82 81       	ldd	r24, Z+2	; 0x02
     798:	93 81       	ldd	r25, Z+3	; 0x03
     79a:	26 e6       	ldi	r18, 0x66	; 102
     79c:	36 e6       	ldi	r19, 0x66	; 102
     79e:	46 e6       	ldi	r20, 0x66	; 102
     7a0:	55 e4       	ldi	r21, 0x45	; 69
     7a2:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     7a6:	dc 01       	movw	r26, r24
     7a8:	cb 01       	movw	r24, r22
     7aa:	f8 01       	movw	r30, r16
     7ac:	80 83       	st	Z, r24
     7ae:	91 83       	std	Z+1, r25	; 0x01
     7b0:	a2 83       	std	Z+2, r26	; 0x02
     7b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     7b4:	fe 01       	movw	r30, r28
     7b6:	ff 96       	adiw	r30, 0x3f	; 63
     7b8:	60 81       	ld	r22, Z
     7ba:	71 81       	ldd	r23, Z+1	; 0x01
     7bc:	82 81       	ldd	r24, Z+2	; 0x02
     7be:	93 81       	ldd	r25, Z+3	; 0x03
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	40 e8       	ldi	r20, 0x80	; 128
     7c6:	5f e3       	ldi	r21, 0x3F	; 63
     7c8:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__ltsf2>
     7cc:	88 23       	and	r24, r24
     7ce:	2c f4       	brge	.+10     	; 0x7da <main+0x366>
		__ticks = 1;
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	9e af       	std	Y+62, r25	; 0x3e
     7d6:	8d af       	std	Y+61, r24	; 0x3d
     7d8:	46 c0       	rjmp	.+140    	; 0x866 <main+0x3f2>
	else if (__tmp > 65535)
     7da:	fe 01       	movw	r30, r28
     7dc:	ff 96       	adiw	r30, 0x3f	; 63
     7de:	60 81       	ld	r22, Z
     7e0:	71 81       	ldd	r23, Z+1	; 0x01
     7e2:	82 81       	ldd	r24, Z+2	; 0x02
     7e4:	93 81       	ldd	r25, Z+3	; 0x03
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	3f ef       	ldi	r19, 0xFF	; 255
     7ea:	4f e7       	ldi	r20, 0x7F	; 127
     7ec:	57 e4       	ldi	r21, 0x47	; 71
     7ee:	0e 94 8e 09 	call	0x131c	; 0x131c <__gtsf2>
     7f2:	18 16       	cp	r1, r24
     7f4:	64 f5       	brge	.+88     	; 0x84e <main+0x3da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7f6:	fe 01       	movw	r30, r28
     7f8:	ed 5b       	subi	r30, 0xBD	; 189
     7fa:	ff 4f       	sbci	r31, 0xFF	; 255
     7fc:	60 81       	ld	r22, Z
     7fe:	71 81       	ldd	r23, Z+1	; 0x01
     800:	82 81       	ldd	r24, Z+2	; 0x02
     802:	93 81       	ldd	r25, Z+3	; 0x03
     804:	20 e0       	ldi	r18, 0x00	; 0
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	40 e2       	ldi	r20, 0x20	; 32
     80a:	51 e4       	ldi	r21, 0x41	; 65
     80c:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     810:	dc 01       	movw	r26, r24
     812:	cb 01       	movw	r24, r22
     814:	bc 01       	movw	r22, r24
     816:	cd 01       	movw	r24, r26
     818:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     81c:	dc 01       	movw	r26, r24
     81e:	cb 01       	movw	r24, r22
     820:	9e af       	std	Y+62, r25	; 0x3e
     822:	8d af       	std	Y+61, r24	; 0x3d
     824:	0f c0       	rjmp	.+30     	; 0x844 <main+0x3d0>
     826:	80 e7       	ldi	r24, 0x70	; 112
     828:	91 e0       	ldi	r25, 0x01	; 1
     82a:	9c af       	std	Y+60, r25	; 0x3c
     82c:	8b af       	std	Y+59, r24	; 0x3b
     82e:	8b ad       	ldd	r24, Y+59	; 0x3b
     830:	9c ad       	ldd	r25, Y+60	; 0x3c
     832:	01 97       	sbiw	r24, 0x01	; 1
     834:	f1 f7       	brne	.-4      	; 0x832 <main+0x3be>
     836:	9c af       	std	Y+60, r25	; 0x3c
     838:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     83a:	8d ad       	ldd	r24, Y+61	; 0x3d
     83c:	9e ad       	ldd	r25, Y+62	; 0x3e
     83e:	01 97       	sbiw	r24, 0x01	; 1
     840:	9e af       	std	Y+62, r25	; 0x3e
     842:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     844:	8d ad       	ldd	r24, Y+61	; 0x3d
     846:	9e ad       	ldd	r25, Y+62	; 0x3e
     848:	00 97       	sbiw	r24, 0x00	; 0
     84a:	69 f7       	brne	.-38     	; 0x826 <main+0x3b2>
     84c:	16 c0       	rjmp	.+44     	; 0x87a <main+0x406>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     84e:	fe 01       	movw	r30, r28
     850:	ff 96       	adiw	r30, 0x3f	; 63
     852:	60 81       	ld	r22, Z
     854:	71 81       	ldd	r23, Z+1	; 0x01
     856:	82 81       	ldd	r24, Z+2	; 0x02
     858:	93 81       	ldd	r25, Z+3	; 0x03
     85a:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     85e:	dc 01       	movw	r26, r24
     860:	cb 01       	movw	r24, r22
     862:	9e af       	std	Y+62, r25	; 0x3e
     864:	8d af       	std	Y+61, r24	; 0x3d
     866:	8d ad       	ldd	r24, Y+61	; 0x3d
     868:	9e ad       	ldd	r25, Y+62	; 0x3e
     86a:	9a af       	std	Y+58, r25	; 0x3a
     86c:	89 af       	std	Y+57, r24	; 0x39
     86e:	89 ad       	ldd	r24, Y+57	; 0x39
     870:	9a ad       	ldd	r25, Y+58	; 0x3a
     872:	01 97       	sbiw	r24, 0x01	; 1
     874:	f1 f7       	brne	.-4      	; 0x872 <main+0x3fe>
     876:	9a af       	std	Y+58, r25	; 0x3a
     878:	89 af       	std	Y+57, r24	; 0x39
 _delay_ms(2000);
 servo_3(90);
     87a:	8a e5       	ldi	r24, 0x5A	; 90
     87c:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	aa ef       	ldi	r26, 0xFA	; 250
     886:	b4 e4       	ldi	r27, 0x44	; 68
     888:	8d ab       	std	Y+53, r24	; 0x35
     88a:	9e ab       	std	Y+54, r25	; 0x36
     88c:	af ab       	std	Y+55, r26	; 0x37
     88e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     890:	6d a9       	ldd	r22, Y+53	; 0x35
     892:	7e a9       	ldd	r23, Y+54	; 0x36
     894:	8f a9       	ldd	r24, Y+55	; 0x37
     896:	98 ad       	ldd	r25, Y+56	; 0x38
     898:	26 e6       	ldi	r18, 0x66	; 102
     89a:	36 e6       	ldi	r19, 0x66	; 102
     89c:	46 e6       	ldi	r20, 0x66	; 102
     89e:	55 e4       	ldi	r21, 0x45	; 69
     8a0:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     8a4:	dc 01       	movw	r26, r24
     8a6:	cb 01       	movw	r24, r22
     8a8:	89 ab       	std	Y+49, r24	; 0x31
     8aa:	9a ab       	std	Y+50, r25	; 0x32
     8ac:	ab ab       	std	Y+51, r26	; 0x33
     8ae:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     8b0:	69 a9       	ldd	r22, Y+49	; 0x31
     8b2:	7a a9       	ldd	r23, Y+50	; 0x32
     8b4:	8b a9       	ldd	r24, Y+51	; 0x33
     8b6:	9c a9       	ldd	r25, Y+52	; 0x34
     8b8:	20 e0       	ldi	r18, 0x00	; 0
     8ba:	30 e0       	ldi	r19, 0x00	; 0
     8bc:	40 e8       	ldi	r20, 0x80	; 128
     8be:	5f e3       	ldi	r21, 0x3F	; 63
     8c0:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__ltsf2>
     8c4:	88 23       	and	r24, r24
     8c6:	2c f4       	brge	.+10     	; 0x8d2 <main+0x45e>
		__ticks = 1;
     8c8:	81 e0       	ldi	r24, 0x01	; 1
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	98 ab       	std	Y+48, r25	; 0x30
     8ce:	8f a7       	std	Y+47, r24	; 0x2f
     8d0:	3f c0       	rjmp	.+126    	; 0x950 <main+0x4dc>
	else if (__tmp > 65535)
     8d2:	69 a9       	ldd	r22, Y+49	; 0x31
     8d4:	7a a9       	ldd	r23, Y+50	; 0x32
     8d6:	8b a9       	ldd	r24, Y+51	; 0x33
     8d8:	9c a9       	ldd	r25, Y+52	; 0x34
     8da:	20 e0       	ldi	r18, 0x00	; 0
     8dc:	3f ef       	ldi	r19, 0xFF	; 255
     8de:	4f e7       	ldi	r20, 0x7F	; 127
     8e0:	57 e4       	ldi	r21, 0x47	; 71
     8e2:	0e 94 8e 09 	call	0x131c	; 0x131c <__gtsf2>
     8e6:	18 16       	cp	r1, r24
     8e8:	4c f5       	brge	.+82     	; 0x93c <main+0x4c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8ea:	6d a9       	ldd	r22, Y+53	; 0x35
     8ec:	7e a9       	ldd	r23, Y+54	; 0x36
     8ee:	8f a9       	ldd	r24, Y+55	; 0x37
     8f0:	98 ad       	ldd	r25, Y+56	; 0x38
     8f2:	20 e0       	ldi	r18, 0x00	; 0
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	40 e2       	ldi	r20, 0x20	; 32
     8f8:	51 e4       	ldi	r21, 0x41	; 65
     8fa:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     8fe:	dc 01       	movw	r26, r24
     900:	cb 01       	movw	r24, r22
     902:	bc 01       	movw	r22, r24
     904:	cd 01       	movw	r24, r26
     906:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     90a:	dc 01       	movw	r26, r24
     90c:	cb 01       	movw	r24, r22
     90e:	98 ab       	std	Y+48, r25	; 0x30
     910:	8f a7       	std	Y+47, r24	; 0x2f
     912:	0f c0       	rjmp	.+30     	; 0x932 <main+0x4be>
     914:	80 e7       	ldi	r24, 0x70	; 112
     916:	91 e0       	ldi	r25, 0x01	; 1
     918:	9e a7       	std	Y+46, r25	; 0x2e
     91a:	8d a7       	std	Y+45, r24	; 0x2d
     91c:	8d a5       	ldd	r24, Y+45	; 0x2d
     91e:	9e a5       	ldd	r25, Y+46	; 0x2e
     920:	01 97       	sbiw	r24, 0x01	; 1
     922:	f1 f7       	brne	.-4      	; 0x920 <main+0x4ac>
     924:	9e a7       	std	Y+46, r25	; 0x2e
     926:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     928:	8f a5       	ldd	r24, Y+47	; 0x2f
     92a:	98 a9       	ldd	r25, Y+48	; 0x30
     92c:	01 97       	sbiw	r24, 0x01	; 1
     92e:	98 ab       	std	Y+48, r25	; 0x30
     930:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     932:	8f a5       	ldd	r24, Y+47	; 0x2f
     934:	98 a9       	ldd	r25, Y+48	; 0x30
     936:	00 97       	sbiw	r24, 0x00	; 0
     938:	69 f7       	brne	.-38     	; 0x914 <main+0x4a0>
     93a:	14 c0       	rjmp	.+40     	; 0x964 <main+0x4f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     93c:	69 a9       	ldd	r22, Y+49	; 0x31
     93e:	7a a9       	ldd	r23, Y+50	; 0x32
     940:	8b a9       	ldd	r24, Y+51	; 0x33
     942:	9c a9       	ldd	r25, Y+52	; 0x34
     944:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     948:	dc 01       	movw	r26, r24
     94a:	cb 01       	movw	r24, r22
     94c:	98 ab       	std	Y+48, r25	; 0x30
     94e:	8f a7       	std	Y+47, r24	; 0x2f
     950:	8f a5       	ldd	r24, Y+47	; 0x2f
     952:	98 a9       	ldd	r25, Y+48	; 0x30
     954:	9c a7       	std	Y+44, r25	; 0x2c
     956:	8b a7       	std	Y+43, r24	; 0x2b
     958:	8b a5       	ldd	r24, Y+43	; 0x2b
     95a:	9c a5       	ldd	r25, Y+44	; 0x2c
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <main+0x4e8>
     960:	9c a7       	std	Y+44, r25	; 0x2c
     962:	8b a7       	std	Y+43, r24	; 0x2b
 _delay_ms(2000);
 servo_3(120);
     964:	88 e7       	ldi	r24, 0x78	; 120
     966:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	aa ef       	ldi	r26, 0xFA	; 250
     970:	b4 e4       	ldi	r27, 0x44	; 68
     972:	8f a3       	std	Y+39, r24	; 0x27
     974:	98 a7       	std	Y+40, r25	; 0x28
     976:	a9 a7       	std	Y+41, r26	; 0x29
     978:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     97a:	6f a1       	ldd	r22, Y+39	; 0x27
     97c:	78 a5       	ldd	r23, Y+40	; 0x28
     97e:	89 a5       	ldd	r24, Y+41	; 0x29
     980:	9a a5       	ldd	r25, Y+42	; 0x2a
     982:	26 e6       	ldi	r18, 0x66	; 102
     984:	36 e6       	ldi	r19, 0x66	; 102
     986:	46 e6       	ldi	r20, 0x66	; 102
     988:	55 e4       	ldi	r21, 0x45	; 69
     98a:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     98e:	dc 01       	movw	r26, r24
     990:	cb 01       	movw	r24, r22
     992:	8b a3       	std	Y+35, r24	; 0x23
     994:	9c a3       	std	Y+36, r25	; 0x24
     996:	ad a3       	std	Y+37, r26	; 0x25
     998:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     99a:	6b a1       	ldd	r22, Y+35	; 0x23
     99c:	7c a1       	ldd	r23, Y+36	; 0x24
     99e:	8d a1       	ldd	r24, Y+37	; 0x25
     9a0:	9e a1       	ldd	r25, Y+38	; 0x26
     9a2:	20 e0       	ldi	r18, 0x00	; 0
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 e8       	ldi	r20, 0x80	; 128
     9a8:	5f e3       	ldi	r21, 0x3F	; 63
     9aa:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__ltsf2>
     9ae:	88 23       	and	r24, r24
     9b0:	2c f4       	brge	.+10     	; 0x9bc <main+0x548>
		__ticks = 1;
     9b2:	81 e0       	ldi	r24, 0x01	; 1
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	9a a3       	std	Y+34, r25	; 0x22
     9b8:	89 a3       	std	Y+33, r24	; 0x21
     9ba:	3f c0       	rjmp	.+126    	; 0xa3a <main+0x5c6>
	else if (__tmp > 65535)
     9bc:	6b a1       	ldd	r22, Y+35	; 0x23
     9be:	7c a1       	ldd	r23, Y+36	; 0x24
     9c0:	8d a1       	ldd	r24, Y+37	; 0x25
     9c2:	9e a1       	ldd	r25, Y+38	; 0x26
     9c4:	20 e0       	ldi	r18, 0x00	; 0
     9c6:	3f ef       	ldi	r19, 0xFF	; 255
     9c8:	4f e7       	ldi	r20, 0x7F	; 127
     9ca:	57 e4       	ldi	r21, 0x47	; 71
     9cc:	0e 94 8e 09 	call	0x131c	; 0x131c <__gtsf2>
     9d0:	18 16       	cp	r1, r24
     9d2:	4c f5       	brge	.+82     	; 0xa26 <main+0x5b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9d4:	6f a1       	ldd	r22, Y+39	; 0x27
     9d6:	78 a5       	ldd	r23, Y+40	; 0x28
     9d8:	89 a5       	ldd	r24, Y+41	; 0x29
     9da:	9a a5       	ldd	r25, Y+42	; 0x2a
     9dc:	20 e0       	ldi	r18, 0x00	; 0
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	40 e2       	ldi	r20, 0x20	; 32
     9e2:	51 e4       	ldi	r21, 0x41	; 65
     9e4:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     9e8:	dc 01       	movw	r26, r24
     9ea:	cb 01       	movw	r24, r22
     9ec:	bc 01       	movw	r22, r24
     9ee:	cd 01       	movw	r24, r26
     9f0:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     9f4:	dc 01       	movw	r26, r24
     9f6:	cb 01       	movw	r24, r22
     9f8:	9a a3       	std	Y+34, r25	; 0x22
     9fa:	89 a3       	std	Y+33, r24	; 0x21
     9fc:	0f c0       	rjmp	.+30     	; 0xa1c <main+0x5a8>
     9fe:	80 e7       	ldi	r24, 0x70	; 112
     a00:	91 e0       	ldi	r25, 0x01	; 1
     a02:	98 a3       	std	Y+32, r25	; 0x20
     a04:	8f 8f       	std	Y+31, r24	; 0x1f
     a06:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a08:	98 a1       	ldd	r25, Y+32	; 0x20
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	f1 f7       	brne	.-4      	; 0xa0a <main+0x596>
     a0e:	98 a3       	std	Y+32, r25	; 0x20
     a10:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a12:	89 a1       	ldd	r24, Y+33	; 0x21
     a14:	9a a1       	ldd	r25, Y+34	; 0x22
     a16:	01 97       	sbiw	r24, 0x01	; 1
     a18:	9a a3       	std	Y+34, r25	; 0x22
     a1a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a1c:	89 a1       	ldd	r24, Y+33	; 0x21
     a1e:	9a a1       	ldd	r25, Y+34	; 0x22
     a20:	00 97       	sbiw	r24, 0x00	; 0
     a22:	69 f7       	brne	.-38     	; 0x9fe <main+0x58a>
     a24:	14 c0       	rjmp	.+40     	; 0xa4e <main+0x5da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a26:	6b a1       	ldd	r22, Y+35	; 0x23
     a28:	7c a1       	ldd	r23, Y+36	; 0x24
     a2a:	8d a1       	ldd	r24, Y+37	; 0x25
     a2c:	9e a1       	ldd	r25, Y+38	; 0x26
     a2e:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     a32:	dc 01       	movw	r26, r24
     a34:	cb 01       	movw	r24, r22
     a36:	9a a3       	std	Y+34, r25	; 0x22
     a38:	89 a3       	std	Y+33, r24	; 0x21
     a3a:	89 a1       	ldd	r24, Y+33	; 0x21
     a3c:	9a a1       	ldd	r25, Y+34	; 0x22
     a3e:	9e 8f       	std	Y+30, r25	; 0x1e
     a40:	8d 8f       	std	Y+29, r24	; 0x1d
     a42:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a44:	9e 8d       	ldd	r25, Y+30	; 0x1e
     a46:	01 97       	sbiw	r24, 0x01	; 1
     a48:	f1 f7       	brne	.-4      	; 0xa46 <main+0x5d2>
     a4a:	9e 8f       	std	Y+30, r25	; 0x1e
     a4c:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(2000);
 servo_3(150);
     a4e:	86 e9       	ldi	r24, 0x96	; 150
     a50:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	aa ef       	ldi	r26, 0xFA	; 250
     a5a:	b4 e4       	ldi	r27, 0x44	; 68
     a5c:	89 8f       	std	Y+25, r24	; 0x19
     a5e:	9a 8f       	std	Y+26, r25	; 0x1a
     a60:	ab 8f       	std	Y+27, r26	; 0x1b
     a62:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     a64:	69 8d       	ldd	r22, Y+25	; 0x19
     a66:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a68:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a6c:	26 e6       	ldi	r18, 0x66	; 102
     a6e:	36 e6       	ldi	r19, 0x66	; 102
     a70:	46 e6       	ldi	r20, 0x66	; 102
     a72:	55 e4       	ldi	r21, 0x45	; 69
     a74:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     a78:	dc 01       	movw	r26, r24
     a7a:	cb 01       	movw	r24, r22
     a7c:	8d 8b       	std	Y+21, r24	; 0x15
     a7e:	9e 8b       	std	Y+22, r25	; 0x16
     a80:	af 8b       	std	Y+23, r26	; 0x17
     a82:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     a84:	6d 89       	ldd	r22, Y+21	; 0x15
     a86:	7e 89       	ldd	r23, Y+22	; 0x16
     a88:	8f 89       	ldd	r24, Y+23	; 0x17
     a8a:	98 8d       	ldd	r25, Y+24	; 0x18
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	40 e8       	ldi	r20, 0x80	; 128
     a92:	5f e3       	ldi	r21, 0x3F	; 63
     a94:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__ltsf2>
     a98:	88 23       	and	r24, r24
     a9a:	2c f4       	brge	.+10     	; 0xaa6 <main+0x632>
		__ticks = 1;
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	9c 8b       	std	Y+20, r25	; 0x14
     aa2:	8b 8b       	std	Y+19, r24	; 0x13
     aa4:	3f c0       	rjmp	.+126    	; 0xb24 <main+0x6b0>
	else if (__tmp > 65535)
     aa6:	6d 89       	ldd	r22, Y+21	; 0x15
     aa8:	7e 89       	ldd	r23, Y+22	; 0x16
     aaa:	8f 89       	ldd	r24, Y+23	; 0x17
     aac:	98 8d       	ldd	r25, Y+24	; 0x18
     aae:	20 e0       	ldi	r18, 0x00	; 0
     ab0:	3f ef       	ldi	r19, 0xFF	; 255
     ab2:	4f e7       	ldi	r20, 0x7F	; 127
     ab4:	57 e4       	ldi	r21, 0x47	; 71
     ab6:	0e 94 8e 09 	call	0x131c	; 0x131c <__gtsf2>
     aba:	18 16       	cp	r1, r24
     abc:	4c f5       	brge	.+82     	; 0xb10 <main+0x69c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     abe:	69 8d       	ldd	r22, Y+25	; 0x19
     ac0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     ac2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ac4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	40 e2       	ldi	r20, 0x20	; 32
     acc:	51 e4       	ldi	r21, 0x41	; 65
     ace:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     ad2:	dc 01       	movw	r26, r24
     ad4:	cb 01       	movw	r24, r22
     ad6:	bc 01       	movw	r22, r24
     ad8:	cd 01       	movw	r24, r26
     ada:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     ade:	dc 01       	movw	r26, r24
     ae0:	cb 01       	movw	r24, r22
     ae2:	9c 8b       	std	Y+20, r25	; 0x14
     ae4:	8b 8b       	std	Y+19, r24	; 0x13
     ae6:	0f c0       	rjmp	.+30     	; 0xb06 <main+0x692>
     ae8:	80 e7       	ldi	r24, 0x70	; 112
     aea:	91 e0       	ldi	r25, 0x01	; 1
     aec:	9a 8b       	std	Y+18, r25	; 0x12
     aee:	89 8b       	std	Y+17, r24	; 0x11
     af0:	89 89       	ldd	r24, Y+17	; 0x11
     af2:	9a 89       	ldd	r25, Y+18	; 0x12
     af4:	01 97       	sbiw	r24, 0x01	; 1
     af6:	f1 f7       	brne	.-4      	; 0xaf4 <main+0x680>
     af8:	9a 8b       	std	Y+18, r25	; 0x12
     afa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     afc:	8b 89       	ldd	r24, Y+19	; 0x13
     afe:	9c 89       	ldd	r25, Y+20	; 0x14
     b00:	01 97       	sbiw	r24, 0x01	; 1
     b02:	9c 8b       	std	Y+20, r25	; 0x14
     b04:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b06:	8b 89       	ldd	r24, Y+19	; 0x13
     b08:	9c 89       	ldd	r25, Y+20	; 0x14
     b0a:	00 97       	sbiw	r24, 0x00	; 0
     b0c:	69 f7       	brne	.-38     	; 0xae8 <main+0x674>
     b0e:	14 c0       	rjmp	.+40     	; 0xb38 <main+0x6c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b10:	6d 89       	ldd	r22, Y+21	; 0x15
     b12:	7e 89       	ldd	r23, Y+22	; 0x16
     b14:	8f 89       	ldd	r24, Y+23	; 0x17
     b16:	98 8d       	ldd	r25, Y+24	; 0x18
     b18:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     b1c:	dc 01       	movw	r26, r24
     b1e:	cb 01       	movw	r24, r22
     b20:	9c 8b       	std	Y+20, r25	; 0x14
     b22:	8b 8b       	std	Y+19, r24	; 0x13
     b24:	8b 89       	ldd	r24, Y+19	; 0x13
     b26:	9c 89       	ldd	r25, Y+20	; 0x14
     b28:	98 8b       	std	Y+16, r25	; 0x10
     b2a:	8f 87       	std	Y+15, r24	; 0x0f
     b2c:	8f 85       	ldd	r24, Y+15	; 0x0f
     b2e:	98 89       	ldd	r25, Y+16	; 0x10
     b30:	01 97       	sbiw	r24, 0x01	; 1
     b32:	f1 f7       	brne	.-4      	; 0xb30 <main+0x6bc>
     b34:	98 8b       	std	Y+16, r25	; 0x10
     b36:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(2000);
 servo_3(180);
     b38:	84 eb       	ldi	r24, 0xB4	; 180
     b3a:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	aa ef       	ldi	r26, 0xFA	; 250
     b44:	b4 e4       	ldi	r27, 0x44	; 68
     b46:	8b 87       	std	Y+11, r24	; 0x0b
     b48:	9c 87       	std	Y+12, r25	; 0x0c
     b4a:	ad 87       	std	Y+13, r26	; 0x0d
     b4c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b4e:	6b 85       	ldd	r22, Y+11	; 0x0b
     b50:	7c 85       	ldd	r23, Y+12	; 0x0c
     b52:	8d 85       	ldd	r24, Y+13	; 0x0d
     b54:	9e 85       	ldd	r25, Y+14	; 0x0e
     b56:	26 e6       	ldi	r18, 0x66	; 102
     b58:	36 e6       	ldi	r19, 0x66	; 102
     b5a:	46 e6       	ldi	r20, 0x66	; 102
     b5c:	55 e4       	ldi	r21, 0x45	; 69
     b5e:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     b62:	dc 01       	movw	r26, r24
     b64:	cb 01       	movw	r24, r22
     b66:	8f 83       	std	Y+7, r24	; 0x07
     b68:	98 87       	std	Y+8, r25	; 0x08
     b6a:	a9 87       	std	Y+9, r26	; 0x09
     b6c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     b6e:	6f 81       	ldd	r22, Y+7	; 0x07
     b70:	78 85       	ldd	r23, Y+8	; 0x08
     b72:	89 85       	ldd	r24, Y+9	; 0x09
     b74:	9a 85       	ldd	r25, Y+10	; 0x0a
     b76:	20 e0       	ldi	r18, 0x00	; 0
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	40 e8       	ldi	r20, 0x80	; 128
     b7c:	5f e3       	ldi	r21, 0x3F	; 63
     b7e:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__ltsf2>
     b82:	88 23       	and	r24, r24
     b84:	2c f4       	brge	.+10     	; 0xb90 <main+0x71c>
		__ticks = 1;
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	9e 83       	std	Y+6, r25	; 0x06
     b8c:	8d 83       	std	Y+5, r24	; 0x05
     b8e:	3f c0       	rjmp	.+126    	; 0xc0e <main+0x79a>
	else if (__tmp > 65535)
     b90:	6f 81       	ldd	r22, Y+7	; 0x07
     b92:	78 85       	ldd	r23, Y+8	; 0x08
     b94:	89 85       	ldd	r24, Y+9	; 0x09
     b96:	9a 85       	ldd	r25, Y+10	; 0x0a
     b98:	20 e0       	ldi	r18, 0x00	; 0
     b9a:	3f ef       	ldi	r19, 0xFF	; 255
     b9c:	4f e7       	ldi	r20, 0x7F	; 127
     b9e:	57 e4       	ldi	r21, 0x47	; 71
     ba0:	0e 94 8e 09 	call	0x131c	; 0x131c <__gtsf2>
     ba4:	18 16       	cp	r1, r24
     ba6:	4c f5       	brge	.+82     	; 0xbfa <main+0x786>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ba8:	6b 85       	ldd	r22, Y+11	; 0x0b
     baa:	7c 85       	ldd	r23, Y+12	; 0x0c
     bac:	8d 85       	ldd	r24, Y+13	; 0x0d
     bae:	9e 85       	ldd	r25, Y+14	; 0x0e
     bb0:	20 e0       	ldi	r18, 0x00	; 0
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	40 e2       	ldi	r20, 0x20	; 32
     bb6:	51 e4       	ldi	r21, 0x41	; 65
     bb8:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__mulsf3>
     bbc:	dc 01       	movw	r26, r24
     bbe:	cb 01       	movw	r24, r22
     bc0:	bc 01       	movw	r22, r24
     bc2:	cd 01       	movw	r24, r26
     bc4:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     bc8:	dc 01       	movw	r26, r24
     bca:	cb 01       	movw	r24, r22
     bcc:	9e 83       	std	Y+6, r25	; 0x06
     bce:	8d 83       	std	Y+5, r24	; 0x05
     bd0:	0f c0       	rjmp	.+30     	; 0xbf0 <main+0x77c>
     bd2:	80 e7       	ldi	r24, 0x70	; 112
     bd4:	91 e0       	ldi	r25, 0x01	; 1
     bd6:	9c 83       	std	Y+4, r25	; 0x04
     bd8:	8b 83       	std	Y+3, r24	; 0x03
     bda:	8b 81       	ldd	r24, Y+3	; 0x03
     bdc:	9c 81       	ldd	r25, Y+4	; 0x04
     bde:	01 97       	sbiw	r24, 0x01	; 1
     be0:	f1 f7       	brne	.-4      	; 0xbde <main+0x76a>
     be2:	9c 83       	std	Y+4, r25	; 0x04
     be4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     be6:	8d 81       	ldd	r24, Y+5	; 0x05
     be8:	9e 81       	ldd	r25, Y+6	; 0x06
     bea:	01 97       	sbiw	r24, 0x01	; 1
     bec:	9e 83       	std	Y+6, r25	; 0x06
     bee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bf0:	8d 81       	ldd	r24, Y+5	; 0x05
     bf2:	9e 81       	ldd	r25, Y+6	; 0x06
     bf4:	00 97       	sbiw	r24, 0x00	; 0
     bf6:	69 f7       	brne	.-38     	; 0xbd2 <main+0x75e>
     bf8:	4c cc       	rjmp	.-1896   	; 0x492 <main+0x1e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bfa:	6f 81       	ldd	r22, Y+7	; 0x07
     bfc:	78 85       	ldd	r23, Y+8	; 0x08
     bfe:	89 85       	ldd	r24, Y+9	; 0x09
     c00:	9a 85       	ldd	r25, Y+10	; 0x0a
     c02:	0e 94 12 06 	call	0xc24	; 0xc24 <__fixunssfsi>
     c06:	dc 01       	movw	r26, r24
     c08:	cb 01       	movw	r24, r22
     c0a:	9e 83       	std	Y+6, r25	; 0x06
     c0c:	8d 83       	std	Y+5, r24	; 0x05
     c0e:	8d 81       	ldd	r24, Y+5	; 0x05
     c10:	9e 81       	ldd	r25, Y+6	; 0x06
     c12:	9a 83       	std	Y+2, r25	; 0x02
     c14:	89 83       	std	Y+1, r24	; 0x01
     c16:	89 81       	ldd	r24, Y+1	; 0x01
     c18:	9a 81       	ldd	r25, Y+2	; 0x02
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	f1 f7       	brne	.-4      	; 0xc1a <main+0x7a6>
     c1e:	9a 83       	std	Y+2, r25	; 0x02
     c20:	89 83       	std	Y+1, r24	; 0x01
     c22:	37 cc       	rjmp	.-1938   	; 0x492 <main+0x1e>

00000c24 <__fixunssfsi>:
     c24:	ef 92       	push	r14
     c26:	ff 92       	push	r15
     c28:	0f 93       	push	r16
     c2a:	1f 93       	push	r17
     c2c:	7b 01       	movw	r14, r22
     c2e:	8c 01       	movw	r16, r24
     c30:	20 e0       	ldi	r18, 0x00	; 0
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	40 e0       	ldi	r20, 0x00	; 0
     c36:	5f e4       	ldi	r21, 0x4F	; 79
     c38:	0e 94 be 09 	call	0x137c	; 0x137c <__gesf2>
     c3c:	88 23       	and	r24, r24
     c3e:	8c f0       	brlt	.+34     	; 0xc62 <__fixunssfsi+0x3e>
     c40:	c8 01       	movw	r24, r16
     c42:	b7 01       	movw	r22, r14
     c44:	20 e0       	ldi	r18, 0x00	; 0
     c46:	30 e0       	ldi	r19, 0x00	; 0
     c48:	40 e0       	ldi	r20, 0x00	; 0
     c4a:	5f e4       	ldi	r21, 0x4F	; 79
     c4c:	0e 94 8a 07 	call	0xf14	; 0xf14 <__subsf3>
     c50:	0e 94 1e 0a 	call	0x143c	; 0x143c <__fixsfsi>
     c54:	9b 01       	movw	r18, r22
     c56:	ac 01       	movw	r20, r24
     c58:	20 50       	subi	r18, 0x00	; 0
     c5a:	30 40       	sbci	r19, 0x00	; 0
     c5c:	40 40       	sbci	r20, 0x00	; 0
     c5e:	50 48       	sbci	r21, 0x80	; 128
     c60:	06 c0       	rjmp	.+12     	; 0xc6e <__fixunssfsi+0x4a>
     c62:	c8 01       	movw	r24, r16
     c64:	b7 01       	movw	r22, r14
     c66:	0e 94 1e 0a 	call	0x143c	; 0x143c <__fixsfsi>
     c6a:	9b 01       	movw	r18, r22
     c6c:	ac 01       	movw	r20, r24
     c6e:	b9 01       	movw	r22, r18
     c70:	ca 01       	movw	r24, r20
     c72:	1f 91       	pop	r17
     c74:	0f 91       	pop	r16
     c76:	ff 90       	pop	r15
     c78:	ef 90       	pop	r14
     c7a:	08 95       	ret

00000c7c <_fpadd_parts>:
     c7c:	a0 e0       	ldi	r26, 0x00	; 0
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	e4 e4       	ldi	r30, 0x44	; 68
     c82:	f6 e0       	ldi	r31, 0x06	; 6
     c84:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <__prologue_saves__>
     c88:	dc 01       	movw	r26, r24
     c8a:	2b 01       	movw	r4, r22
     c8c:	fa 01       	movw	r30, r20
     c8e:	9c 91       	ld	r25, X
     c90:	92 30       	cpi	r25, 0x02	; 2
     c92:	08 f4       	brcc	.+2      	; 0xc96 <_fpadd_parts+0x1a>
     c94:	39 c1       	rjmp	.+626    	; 0xf08 <_fpadd_parts+0x28c>
     c96:	eb 01       	movw	r28, r22
     c98:	88 81       	ld	r24, Y
     c9a:	82 30       	cpi	r24, 0x02	; 2
     c9c:	08 f4       	brcc	.+2      	; 0xca0 <_fpadd_parts+0x24>
     c9e:	33 c1       	rjmp	.+614    	; 0xf06 <_fpadd_parts+0x28a>
     ca0:	94 30       	cpi	r25, 0x04	; 4
     ca2:	69 f4       	brne	.+26     	; 0xcbe <_fpadd_parts+0x42>
     ca4:	84 30       	cpi	r24, 0x04	; 4
     ca6:	09 f0       	breq	.+2      	; 0xcaa <_fpadd_parts+0x2e>
     ca8:	2f c1       	rjmp	.+606    	; 0xf08 <_fpadd_parts+0x28c>
     caa:	11 96       	adiw	r26, 0x01	; 1
     cac:	9c 91       	ld	r25, X
     cae:	11 97       	sbiw	r26, 0x01	; 1
     cb0:	89 81       	ldd	r24, Y+1	; 0x01
     cb2:	98 17       	cp	r25, r24
     cb4:	09 f4       	brne	.+2      	; 0xcb8 <_fpadd_parts+0x3c>
     cb6:	28 c1       	rjmp	.+592    	; 0xf08 <_fpadd_parts+0x28c>
     cb8:	a0 e0       	ldi	r26, 0x00	; 0
     cba:	b2 e0       	ldi	r27, 0x02	; 2
     cbc:	25 c1       	rjmp	.+586    	; 0xf08 <_fpadd_parts+0x28c>
     cbe:	84 30       	cpi	r24, 0x04	; 4
     cc0:	09 f4       	brne	.+2      	; 0xcc4 <_fpadd_parts+0x48>
     cc2:	21 c1       	rjmp	.+578    	; 0xf06 <_fpadd_parts+0x28a>
     cc4:	82 30       	cpi	r24, 0x02	; 2
     cc6:	a9 f4       	brne	.+42     	; 0xcf2 <_fpadd_parts+0x76>
     cc8:	92 30       	cpi	r25, 0x02	; 2
     cca:	09 f0       	breq	.+2      	; 0xcce <_fpadd_parts+0x52>
     ccc:	1d c1       	rjmp	.+570    	; 0xf08 <_fpadd_parts+0x28c>
     cce:	9a 01       	movw	r18, r20
     cd0:	ad 01       	movw	r20, r26
     cd2:	88 e0       	ldi	r24, 0x08	; 8
     cd4:	ea 01       	movw	r28, r20
     cd6:	09 90       	ld	r0, Y+
     cd8:	ae 01       	movw	r20, r28
     cda:	e9 01       	movw	r28, r18
     cdc:	09 92       	st	Y+, r0
     cde:	9e 01       	movw	r18, r28
     ce0:	81 50       	subi	r24, 0x01	; 1
     ce2:	c1 f7       	brne	.-16     	; 0xcd4 <_fpadd_parts+0x58>
     ce4:	e2 01       	movw	r28, r4
     ce6:	89 81       	ldd	r24, Y+1	; 0x01
     ce8:	11 96       	adiw	r26, 0x01	; 1
     cea:	9c 91       	ld	r25, X
     cec:	89 23       	and	r24, r25
     cee:	81 83       	std	Z+1, r24	; 0x01
     cf0:	08 c1       	rjmp	.+528    	; 0xf02 <_fpadd_parts+0x286>
     cf2:	92 30       	cpi	r25, 0x02	; 2
     cf4:	09 f4       	brne	.+2      	; 0xcf8 <_fpadd_parts+0x7c>
     cf6:	07 c1       	rjmp	.+526    	; 0xf06 <_fpadd_parts+0x28a>
     cf8:	12 96       	adiw	r26, 0x02	; 2
     cfa:	2d 90       	ld	r2, X+
     cfc:	3c 90       	ld	r3, X
     cfe:	13 97       	sbiw	r26, 0x03	; 3
     d00:	eb 01       	movw	r28, r22
     d02:	8a 81       	ldd	r24, Y+2	; 0x02
     d04:	9b 81       	ldd	r25, Y+3	; 0x03
     d06:	14 96       	adiw	r26, 0x04	; 4
     d08:	ad 90       	ld	r10, X+
     d0a:	bd 90       	ld	r11, X+
     d0c:	cd 90       	ld	r12, X+
     d0e:	dc 90       	ld	r13, X
     d10:	17 97       	sbiw	r26, 0x07	; 7
     d12:	ec 80       	ldd	r14, Y+4	; 0x04
     d14:	fd 80       	ldd	r15, Y+5	; 0x05
     d16:	0e 81       	ldd	r16, Y+6	; 0x06
     d18:	1f 81       	ldd	r17, Y+7	; 0x07
     d1a:	91 01       	movw	r18, r2
     d1c:	28 1b       	sub	r18, r24
     d1e:	39 0b       	sbc	r19, r25
     d20:	b9 01       	movw	r22, r18
     d22:	37 ff       	sbrs	r19, 7
     d24:	04 c0       	rjmp	.+8      	; 0xd2e <_fpadd_parts+0xb2>
     d26:	66 27       	eor	r22, r22
     d28:	77 27       	eor	r23, r23
     d2a:	62 1b       	sub	r22, r18
     d2c:	73 0b       	sbc	r23, r19
     d2e:	60 32       	cpi	r22, 0x20	; 32
     d30:	71 05       	cpc	r23, r1
     d32:	0c f0       	brlt	.+2      	; 0xd36 <_fpadd_parts+0xba>
     d34:	61 c0       	rjmp	.+194    	; 0xdf8 <_fpadd_parts+0x17c>
     d36:	12 16       	cp	r1, r18
     d38:	13 06       	cpc	r1, r19
     d3a:	6c f5       	brge	.+90     	; 0xd96 <_fpadd_parts+0x11a>
     d3c:	37 01       	movw	r6, r14
     d3e:	48 01       	movw	r8, r16
     d40:	06 2e       	mov	r0, r22
     d42:	04 c0       	rjmp	.+8      	; 0xd4c <_fpadd_parts+0xd0>
     d44:	96 94       	lsr	r9
     d46:	87 94       	ror	r8
     d48:	77 94       	ror	r7
     d4a:	67 94       	ror	r6
     d4c:	0a 94       	dec	r0
     d4e:	d2 f7       	brpl	.-12     	; 0xd44 <_fpadd_parts+0xc8>
     d50:	21 e0       	ldi	r18, 0x01	; 1
     d52:	30 e0       	ldi	r19, 0x00	; 0
     d54:	40 e0       	ldi	r20, 0x00	; 0
     d56:	50 e0       	ldi	r21, 0x00	; 0
     d58:	04 c0       	rjmp	.+8      	; 0xd62 <_fpadd_parts+0xe6>
     d5a:	22 0f       	add	r18, r18
     d5c:	33 1f       	adc	r19, r19
     d5e:	44 1f       	adc	r20, r20
     d60:	55 1f       	adc	r21, r21
     d62:	6a 95       	dec	r22
     d64:	d2 f7       	brpl	.-12     	; 0xd5a <_fpadd_parts+0xde>
     d66:	21 50       	subi	r18, 0x01	; 1
     d68:	30 40       	sbci	r19, 0x00	; 0
     d6a:	40 40       	sbci	r20, 0x00	; 0
     d6c:	50 40       	sbci	r21, 0x00	; 0
     d6e:	2e 21       	and	r18, r14
     d70:	3f 21       	and	r19, r15
     d72:	40 23       	and	r20, r16
     d74:	51 23       	and	r21, r17
     d76:	21 15       	cp	r18, r1
     d78:	31 05       	cpc	r19, r1
     d7a:	41 05       	cpc	r20, r1
     d7c:	51 05       	cpc	r21, r1
     d7e:	21 f0       	breq	.+8      	; 0xd88 <_fpadd_parts+0x10c>
     d80:	21 e0       	ldi	r18, 0x01	; 1
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	40 e0       	ldi	r20, 0x00	; 0
     d86:	50 e0       	ldi	r21, 0x00	; 0
     d88:	79 01       	movw	r14, r18
     d8a:	8a 01       	movw	r16, r20
     d8c:	e6 28       	or	r14, r6
     d8e:	f7 28       	or	r15, r7
     d90:	08 29       	or	r16, r8
     d92:	19 29       	or	r17, r9
     d94:	3c c0       	rjmp	.+120    	; 0xe0e <_fpadd_parts+0x192>
     d96:	23 2b       	or	r18, r19
     d98:	d1 f1       	breq	.+116    	; 0xe0e <_fpadd_parts+0x192>
     d9a:	26 0e       	add	r2, r22
     d9c:	37 1e       	adc	r3, r23
     d9e:	35 01       	movw	r6, r10
     da0:	46 01       	movw	r8, r12
     da2:	06 2e       	mov	r0, r22
     da4:	04 c0       	rjmp	.+8      	; 0xdae <_fpadd_parts+0x132>
     da6:	96 94       	lsr	r9
     da8:	87 94       	ror	r8
     daa:	77 94       	ror	r7
     dac:	67 94       	ror	r6
     dae:	0a 94       	dec	r0
     db0:	d2 f7       	brpl	.-12     	; 0xda6 <_fpadd_parts+0x12a>
     db2:	21 e0       	ldi	r18, 0x01	; 1
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	40 e0       	ldi	r20, 0x00	; 0
     db8:	50 e0       	ldi	r21, 0x00	; 0
     dba:	04 c0       	rjmp	.+8      	; 0xdc4 <_fpadd_parts+0x148>
     dbc:	22 0f       	add	r18, r18
     dbe:	33 1f       	adc	r19, r19
     dc0:	44 1f       	adc	r20, r20
     dc2:	55 1f       	adc	r21, r21
     dc4:	6a 95       	dec	r22
     dc6:	d2 f7       	brpl	.-12     	; 0xdbc <_fpadd_parts+0x140>
     dc8:	21 50       	subi	r18, 0x01	; 1
     dca:	30 40       	sbci	r19, 0x00	; 0
     dcc:	40 40       	sbci	r20, 0x00	; 0
     dce:	50 40       	sbci	r21, 0x00	; 0
     dd0:	2a 21       	and	r18, r10
     dd2:	3b 21       	and	r19, r11
     dd4:	4c 21       	and	r20, r12
     dd6:	5d 21       	and	r21, r13
     dd8:	21 15       	cp	r18, r1
     dda:	31 05       	cpc	r19, r1
     ddc:	41 05       	cpc	r20, r1
     dde:	51 05       	cpc	r21, r1
     de0:	21 f0       	breq	.+8      	; 0xdea <_fpadd_parts+0x16e>
     de2:	21 e0       	ldi	r18, 0x01	; 1
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	40 e0       	ldi	r20, 0x00	; 0
     de8:	50 e0       	ldi	r21, 0x00	; 0
     dea:	59 01       	movw	r10, r18
     dec:	6a 01       	movw	r12, r20
     dee:	a6 28       	or	r10, r6
     df0:	b7 28       	or	r11, r7
     df2:	c8 28       	or	r12, r8
     df4:	d9 28       	or	r13, r9
     df6:	0b c0       	rjmp	.+22     	; 0xe0e <_fpadd_parts+0x192>
     df8:	82 15       	cp	r24, r2
     dfa:	93 05       	cpc	r25, r3
     dfc:	2c f0       	brlt	.+10     	; 0xe08 <_fpadd_parts+0x18c>
     dfe:	1c 01       	movw	r2, r24
     e00:	aa 24       	eor	r10, r10
     e02:	bb 24       	eor	r11, r11
     e04:	65 01       	movw	r12, r10
     e06:	03 c0       	rjmp	.+6      	; 0xe0e <_fpadd_parts+0x192>
     e08:	ee 24       	eor	r14, r14
     e0a:	ff 24       	eor	r15, r15
     e0c:	87 01       	movw	r16, r14
     e0e:	11 96       	adiw	r26, 0x01	; 1
     e10:	9c 91       	ld	r25, X
     e12:	d2 01       	movw	r26, r4
     e14:	11 96       	adiw	r26, 0x01	; 1
     e16:	8c 91       	ld	r24, X
     e18:	98 17       	cp	r25, r24
     e1a:	09 f4       	brne	.+2      	; 0xe1e <_fpadd_parts+0x1a2>
     e1c:	45 c0       	rjmp	.+138    	; 0xea8 <_fpadd_parts+0x22c>
     e1e:	99 23       	and	r25, r25
     e20:	39 f0       	breq	.+14     	; 0xe30 <_fpadd_parts+0x1b4>
     e22:	a8 01       	movw	r20, r16
     e24:	97 01       	movw	r18, r14
     e26:	2a 19       	sub	r18, r10
     e28:	3b 09       	sbc	r19, r11
     e2a:	4c 09       	sbc	r20, r12
     e2c:	5d 09       	sbc	r21, r13
     e2e:	06 c0       	rjmp	.+12     	; 0xe3c <_fpadd_parts+0x1c0>
     e30:	a6 01       	movw	r20, r12
     e32:	95 01       	movw	r18, r10
     e34:	2e 19       	sub	r18, r14
     e36:	3f 09       	sbc	r19, r15
     e38:	40 0b       	sbc	r20, r16
     e3a:	51 0b       	sbc	r21, r17
     e3c:	57 fd       	sbrc	r21, 7
     e3e:	08 c0       	rjmp	.+16     	; 0xe50 <_fpadd_parts+0x1d4>
     e40:	11 82       	std	Z+1, r1	; 0x01
     e42:	33 82       	std	Z+3, r3	; 0x03
     e44:	22 82       	std	Z+2, r2	; 0x02
     e46:	24 83       	std	Z+4, r18	; 0x04
     e48:	35 83       	std	Z+5, r19	; 0x05
     e4a:	46 83       	std	Z+6, r20	; 0x06
     e4c:	57 83       	std	Z+7, r21	; 0x07
     e4e:	1d c0       	rjmp	.+58     	; 0xe8a <_fpadd_parts+0x20e>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	81 83       	std	Z+1, r24	; 0x01
     e54:	33 82       	std	Z+3, r3	; 0x03
     e56:	22 82       	std	Z+2, r2	; 0x02
     e58:	88 27       	eor	r24, r24
     e5a:	99 27       	eor	r25, r25
     e5c:	dc 01       	movw	r26, r24
     e5e:	82 1b       	sub	r24, r18
     e60:	93 0b       	sbc	r25, r19
     e62:	a4 0b       	sbc	r26, r20
     e64:	b5 0b       	sbc	r27, r21
     e66:	84 83       	std	Z+4, r24	; 0x04
     e68:	95 83       	std	Z+5, r25	; 0x05
     e6a:	a6 83       	std	Z+6, r26	; 0x06
     e6c:	b7 83       	std	Z+7, r27	; 0x07
     e6e:	0d c0       	rjmp	.+26     	; 0xe8a <_fpadd_parts+0x20e>
     e70:	22 0f       	add	r18, r18
     e72:	33 1f       	adc	r19, r19
     e74:	44 1f       	adc	r20, r20
     e76:	55 1f       	adc	r21, r21
     e78:	24 83       	std	Z+4, r18	; 0x04
     e7a:	35 83       	std	Z+5, r19	; 0x05
     e7c:	46 83       	std	Z+6, r20	; 0x06
     e7e:	57 83       	std	Z+7, r21	; 0x07
     e80:	82 81       	ldd	r24, Z+2	; 0x02
     e82:	93 81       	ldd	r25, Z+3	; 0x03
     e84:	01 97       	sbiw	r24, 0x01	; 1
     e86:	93 83       	std	Z+3, r25	; 0x03
     e88:	82 83       	std	Z+2, r24	; 0x02
     e8a:	24 81       	ldd	r18, Z+4	; 0x04
     e8c:	35 81       	ldd	r19, Z+5	; 0x05
     e8e:	46 81       	ldd	r20, Z+6	; 0x06
     e90:	57 81       	ldd	r21, Z+7	; 0x07
     e92:	da 01       	movw	r26, r20
     e94:	c9 01       	movw	r24, r18
     e96:	01 97       	sbiw	r24, 0x01	; 1
     e98:	a1 09       	sbc	r26, r1
     e9a:	b1 09       	sbc	r27, r1
     e9c:	8f 5f       	subi	r24, 0xFF	; 255
     e9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ea0:	af 4f       	sbci	r26, 0xFF	; 255
     ea2:	bf 43       	sbci	r27, 0x3F	; 63
     ea4:	28 f3       	brcs	.-54     	; 0xe70 <_fpadd_parts+0x1f4>
     ea6:	0b c0       	rjmp	.+22     	; 0xebe <_fpadd_parts+0x242>
     ea8:	91 83       	std	Z+1, r25	; 0x01
     eaa:	33 82       	std	Z+3, r3	; 0x03
     eac:	22 82       	std	Z+2, r2	; 0x02
     eae:	ea 0c       	add	r14, r10
     eb0:	fb 1c       	adc	r15, r11
     eb2:	0c 1d       	adc	r16, r12
     eb4:	1d 1d       	adc	r17, r13
     eb6:	e4 82       	std	Z+4, r14	; 0x04
     eb8:	f5 82       	std	Z+5, r15	; 0x05
     eba:	06 83       	std	Z+6, r16	; 0x06
     ebc:	17 83       	std	Z+7, r17	; 0x07
     ebe:	83 e0       	ldi	r24, 0x03	; 3
     ec0:	80 83       	st	Z, r24
     ec2:	24 81       	ldd	r18, Z+4	; 0x04
     ec4:	35 81       	ldd	r19, Z+5	; 0x05
     ec6:	46 81       	ldd	r20, Z+6	; 0x06
     ec8:	57 81       	ldd	r21, Z+7	; 0x07
     eca:	57 ff       	sbrs	r21, 7
     ecc:	1a c0       	rjmp	.+52     	; 0xf02 <_fpadd_parts+0x286>
     ece:	c9 01       	movw	r24, r18
     ed0:	aa 27       	eor	r26, r26
     ed2:	97 fd       	sbrc	r25, 7
     ed4:	a0 95       	com	r26
     ed6:	ba 2f       	mov	r27, r26
     ed8:	81 70       	andi	r24, 0x01	; 1
     eda:	90 70       	andi	r25, 0x00	; 0
     edc:	a0 70       	andi	r26, 0x00	; 0
     ede:	b0 70       	andi	r27, 0x00	; 0
     ee0:	56 95       	lsr	r21
     ee2:	47 95       	ror	r20
     ee4:	37 95       	ror	r19
     ee6:	27 95       	ror	r18
     ee8:	82 2b       	or	r24, r18
     eea:	93 2b       	or	r25, r19
     eec:	a4 2b       	or	r26, r20
     eee:	b5 2b       	or	r27, r21
     ef0:	84 83       	std	Z+4, r24	; 0x04
     ef2:	95 83       	std	Z+5, r25	; 0x05
     ef4:	a6 83       	std	Z+6, r26	; 0x06
     ef6:	b7 83       	std	Z+7, r27	; 0x07
     ef8:	82 81       	ldd	r24, Z+2	; 0x02
     efa:	93 81       	ldd	r25, Z+3	; 0x03
     efc:	01 96       	adiw	r24, 0x01	; 1
     efe:	93 83       	std	Z+3, r25	; 0x03
     f00:	82 83       	std	Z+2, r24	; 0x02
     f02:	df 01       	movw	r26, r30
     f04:	01 c0       	rjmp	.+2      	; 0xf08 <_fpadd_parts+0x28c>
     f06:	d2 01       	movw	r26, r4
     f08:	cd 01       	movw	r24, r26
     f0a:	cd b7       	in	r28, 0x3d	; 61
     f0c:	de b7       	in	r29, 0x3e	; 62
     f0e:	e2 e1       	ldi	r30, 0x12	; 18
     f10:	0c 94 fc 0c 	jmp	0x19f8	; 0x19f8 <__epilogue_restores__>

00000f14 <__subsf3>:
     f14:	a0 e2       	ldi	r26, 0x20	; 32
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	e0 e9       	ldi	r30, 0x90	; 144
     f1a:	f7 e0       	ldi	r31, 0x07	; 7
     f1c:	0c 94 ec 0c 	jmp	0x19d8	; 0x19d8 <__prologue_saves__+0x18>
     f20:	69 83       	std	Y+1, r22	; 0x01
     f22:	7a 83       	std	Y+2, r23	; 0x02
     f24:	8b 83       	std	Y+3, r24	; 0x03
     f26:	9c 83       	std	Y+4, r25	; 0x04
     f28:	2d 83       	std	Y+5, r18	; 0x05
     f2a:	3e 83       	std	Y+6, r19	; 0x06
     f2c:	4f 83       	std	Y+7, r20	; 0x07
     f2e:	58 87       	std	Y+8, r21	; 0x08
     f30:	e9 e0       	ldi	r30, 0x09	; 9
     f32:	ee 2e       	mov	r14, r30
     f34:	f1 2c       	mov	r15, r1
     f36:	ec 0e       	add	r14, r28
     f38:	fd 1e       	adc	r15, r29
     f3a:	ce 01       	movw	r24, r28
     f3c:	01 96       	adiw	r24, 0x01	; 1
     f3e:	b7 01       	movw	r22, r14
     f40:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
     f44:	8e 01       	movw	r16, r28
     f46:	0f 5e       	subi	r16, 0xEF	; 239
     f48:	1f 4f       	sbci	r17, 0xFF	; 255
     f4a:	ce 01       	movw	r24, r28
     f4c:	05 96       	adiw	r24, 0x05	; 5
     f4e:	b8 01       	movw	r22, r16
     f50:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
     f54:	8a 89       	ldd	r24, Y+18	; 0x12
     f56:	91 e0       	ldi	r25, 0x01	; 1
     f58:	89 27       	eor	r24, r25
     f5a:	8a 8b       	std	Y+18, r24	; 0x12
     f5c:	c7 01       	movw	r24, r14
     f5e:	b8 01       	movw	r22, r16
     f60:	ae 01       	movw	r20, r28
     f62:	47 5e       	subi	r20, 0xE7	; 231
     f64:	5f 4f       	sbci	r21, 0xFF	; 255
     f66:	0e 94 3e 06 	call	0xc7c	; 0xc7c <_fpadd_parts>
     f6a:	0e 94 3a 0b 	call	0x1674	; 0x1674 <__pack_f>
     f6e:	a0 96       	adiw	r28, 0x20	; 32
     f70:	e6 e0       	ldi	r30, 0x06	; 6
     f72:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__epilogue_restores__+0x18>

00000f76 <__addsf3>:
     f76:	a0 e2       	ldi	r26, 0x20	; 32
     f78:	b0 e0       	ldi	r27, 0x00	; 0
     f7a:	e1 ec       	ldi	r30, 0xC1	; 193
     f7c:	f7 e0       	ldi	r31, 0x07	; 7
     f7e:	0c 94 ec 0c 	jmp	0x19d8	; 0x19d8 <__prologue_saves__+0x18>
     f82:	69 83       	std	Y+1, r22	; 0x01
     f84:	7a 83       	std	Y+2, r23	; 0x02
     f86:	8b 83       	std	Y+3, r24	; 0x03
     f88:	9c 83       	std	Y+4, r25	; 0x04
     f8a:	2d 83       	std	Y+5, r18	; 0x05
     f8c:	3e 83       	std	Y+6, r19	; 0x06
     f8e:	4f 83       	std	Y+7, r20	; 0x07
     f90:	58 87       	std	Y+8, r21	; 0x08
     f92:	f9 e0       	ldi	r31, 0x09	; 9
     f94:	ef 2e       	mov	r14, r31
     f96:	f1 2c       	mov	r15, r1
     f98:	ec 0e       	add	r14, r28
     f9a:	fd 1e       	adc	r15, r29
     f9c:	ce 01       	movw	r24, r28
     f9e:	01 96       	adiw	r24, 0x01	; 1
     fa0:	b7 01       	movw	r22, r14
     fa2:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
     fa6:	8e 01       	movw	r16, r28
     fa8:	0f 5e       	subi	r16, 0xEF	; 239
     faa:	1f 4f       	sbci	r17, 0xFF	; 255
     fac:	ce 01       	movw	r24, r28
     fae:	05 96       	adiw	r24, 0x05	; 5
     fb0:	b8 01       	movw	r22, r16
     fb2:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
     fb6:	c7 01       	movw	r24, r14
     fb8:	b8 01       	movw	r22, r16
     fba:	ae 01       	movw	r20, r28
     fbc:	47 5e       	subi	r20, 0xE7	; 231
     fbe:	5f 4f       	sbci	r21, 0xFF	; 255
     fc0:	0e 94 3e 06 	call	0xc7c	; 0xc7c <_fpadd_parts>
     fc4:	0e 94 3a 0b 	call	0x1674	; 0x1674 <__pack_f>
     fc8:	a0 96       	adiw	r28, 0x20	; 32
     fca:	e6 e0       	ldi	r30, 0x06	; 6
     fcc:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__epilogue_restores__+0x18>

00000fd0 <__mulsf3>:
     fd0:	a0 e2       	ldi	r26, 0x20	; 32
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	ee ee       	ldi	r30, 0xEE	; 238
     fd6:	f7 e0       	ldi	r31, 0x07	; 7
     fd8:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <__prologue_saves__>
     fdc:	69 83       	std	Y+1, r22	; 0x01
     fde:	7a 83       	std	Y+2, r23	; 0x02
     fe0:	8b 83       	std	Y+3, r24	; 0x03
     fe2:	9c 83       	std	Y+4, r25	; 0x04
     fe4:	2d 83       	std	Y+5, r18	; 0x05
     fe6:	3e 83       	std	Y+6, r19	; 0x06
     fe8:	4f 83       	std	Y+7, r20	; 0x07
     fea:	58 87       	std	Y+8, r21	; 0x08
     fec:	ce 01       	movw	r24, r28
     fee:	01 96       	adiw	r24, 0x01	; 1
     ff0:	be 01       	movw	r22, r28
     ff2:	67 5f       	subi	r22, 0xF7	; 247
     ff4:	7f 4f       	sbci	r23, 0xFF	; 255
     ff6:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
     ffa:	ce 01       	movw	r24, r28
     ffc:	05 96       	adiw	r24, 0x05	; 5
     ffe:	be 01       	movw	r22, r28
    1000:	6f 5e       	subi	r22, 0xEF	; 239
    1002:	7f 4f       	sbci	r23, 0xFF	; 255
    1004:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    1008:	99 85       	ldd	r25, Y+9	; 0x09
    100a:	92 30       	cpi	r25, 0x02	; 2
    100c:	88 f0       	brcs	.+34     	; 0x1030 <__mulsf3+0x60>
    100e:	89 89       	ldd	r24, Y+17	; 0x11
    1010:	82 30       	cpi	r24, 0x02	; 2
    1012:	c8 f0       	brcs	.+50     	; 0x1046 <__mulsf3+0x76>
    1014:	94 30       	cpi	r25, 0x04	; 4
    1016:	19 f4       	brne	.+6      	; 0x101e <__mulsf3+0x4e>
    1018:	82 30       	cpi	r24, 0x02	; 2
    101a:	51 f4       	brne	.+20     	; 0x1030 <__mulsf3+0x60>
    101c:	04 c0       	rjmp	.+8      	; 0x1026 <__mulsf3+0x56>
    101e:	84 30       	cpi	r24, 0x04	; 4
    1020:	29 f4       	brne	.+10     	; 0x102c <__mulsf3+0x5c>
    1022:	92 30       	cpi	r25, 0x02	; 2
    1024:	81 f4       	brne	.+32     	; 0x1046 <__mulsf3+0x76>
    1026:	80 e0       	ldi	r24, 0x00	; 0
    1028:	92 e0       	ldi	r25, 0x02	; 2
    102a:	c6 c0       	rjmp	.+396    	; 0x11b8 <__mulsf3+0x1e8>
    102c:	92 30       	cpi	r25, 0x02	; 2
    102e:	49 f4       	brne	.+18     	; 0x1042 <__mulsf3+0x72>
    1030:	20 e0       	ldi	r18, 0x00	; 0
    1032:	9a 85       	ldd	r25, Y+10	; 0x0a
    1034:	8a 89       	ldd	r24, Y+18	; 0x12
    1036:	98 13       	cpse	r25, r24
    1038:	21 e0       	ldi	r18, 0x01	; 1
    103a:	2a 87       	std	Y+10, r18	; 0x0a
    103c:	ce 01       	movw	r24, r28
    103e:	09 96       	adiw	r24, 0x09	; 9
    1040:	bb c0       	rjmp	.+374    	; 0x11b8 <__mulsf3+0x1e8>
    1042:	82 30       	cpi	r24, 0x02	; 2
    1044:	49 f4       	brne	.+18     	; 0x1058 <__mulsf3+0x88>
    1046:	20 e0       	ldi	r18, 0x00	; 0
    1048:	9a 85       	ldd	r25, Y+10	; 0x0a
    104a:	8a 89       	ldd	r24, Y+18	; 0x12
    104c:	98 13       	cpse	r25, r24
    104e:	21 e0       	ldi	r18, 0x01	; 1
    1050:	2a 8b       	std	Y+18, r18	; 0x12
    1052:	ce 01       	movw	r24, r28
    1054:	41 96       	adiw	r24, 0x11	; 17
    1056:	b0 c0       	rjmp	.+352    	; 0x11b8 <__mulsf3+0x1e8>
    1058:	2d 84       	ldd	r2, Y+13	; 0x0d
    105a:	3e 84       	ldd	r3, Y+14	; 0x0e
    105c:	4f 84       	ldd	r4, Y+15	; 0x0f
    105e:	58 88       	ldd	r5, Y+16	; 0x10
    1060:	6d 88       	ldd	r6, Y+21	; 0x15
    1062:	7e 88       	ldd	r7, Y+22	; 0x16
    1064:	8f 88       	ldd	r8, Y+23	; 0x17
    1066:	98 8c       	ldd	r9, Y+24	; 0x18
    1068:	ee 24       	eor	r14, r14
    106a:	ff 24       	eor	r15, r15
    106c:	87 01       	movw	r16, r14
    106e:	aa 24       	eor	r10, r10
    1070:	bb 24       	eor	r11, r11
    1072:	65 01       	movw	r12, r10
    1074:	40 e0       	ldi	r20, 0x00	; 0
    1076:	50 e0       	ldi	r21, 0x00	; 0
    1078:	60 e0       	ldi	r22, 0x00	; 0
    107a:	70 e0       	ldi	r23, 0x00	; 0
    107c:	e0 e0       	ldi	r30, 0x00	; 0
    107e:	f0 e0       	ldi	r31, 0x00	; 0
    1080:	c1 01       	movw	r24, r2
    1082:	81 70       	andi	r24, 0x01	; 1
    1084:	90 70       	andi	r25, 0x00	; 0
    1086:	89 2b       	or	r24, r25
    1088:	e9 f0       	breq	.+58     	; 0x10c4 <__mulsf3+0xf4>
    108a:	e6 0c       	add	r14, r6
    108c:	f7 1c       	adc	r15, r7
    108e:	08 1d       	adc	r16, r8
    1090:	19 1d       	adc	r17, r9
    1092:	9a 01       	movw	r18, r20
    1094:	ab 01       	movw	r20, r22
    1096:	2a 0d       	add	r18, r10
    1098:	3b 1d       	adc	r19, r11
    109a:	4c 1d       	adc	r20, r12
    109c:	5d 1d       	adc	r21, r13
    109e:	80 e0       	ldi	r24, 0x00	; 0
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a0 e0       	ldi	r26, 0x00	; 0
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	e6 14       	cp	r14, r6
    10a8:	f7 04       	cpc	r15, r7
    10aa:	08 05       	cpc	r16, r8
    10ac:	19 05       	cpc	r17, r9
    10ae:	20 f4       	brcc	.+8      	; 0x10b8 <__mulsf3+0xe8>
    10b0:	81 e0       	ldi	r24, 0x01	; 1
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	a0 e0       	ldi	r26, 0x00	; 0
    10b6:	b0 e0       	ldi	r27, 0x00	; 0
    10b8:	ba 01       	movw	r22, r20
    10ba:	a9 01       	movw	r20, r18
    10bc:	48 0f       	add	r20, r24
    10be:	59 1f       	adc	r21, r25
    10c0:	6a 1f       	adc	r22, r26
    10c2:	7b 1f       	adc	r23, r27
    10c4:	aa 0c       	add	r10, r10
    10c6:	bb 1c       	adc	r11, r11
    10c8:	cc 1c       	adc	r12, r12
    10ca:	dd 1c       	adc	r13, r13
    10cc:	97 fe       	sbrs	r9, 7
    10ce:	08 c0       	rjmp	.+16     	; 0x10e0 <__mulsf3+0x110>
    10d0:	81 e0       	ldi	r24, 0x01	; 1
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	a0 e0       	ldi	r26, 0x00	; 0
    10d6:	b0 e0       	ldi	r27, 0x00	; 0
    10d8:	a8 2a       	or	r10, r24
    10da:	b9 2a       	or	r11, r25
    10dc:	ca 2a       	or	r12, r26
    10de:	db 2a       	or	r13, r27
    10e0:	31 96       	adiw	r30, 0x01	; 1
    10e2:	e0 32       	cpi	r30, 0x20	; 32
    10e4:	f1 05       	cpc	r31, r1
    10e6:	49 f0       	breq	.+18     	; 0x10fa <__mulsf3+0x12a>
    10e8:	66 0c       	add	r6, r6
    10ea:	77 1c       	adc	r7, r7
    10ec:	88 1c       	adc	r8, r8
    10ee:	99 1c       	adc	r9, r9
    10f0:	56 94       	lsr	r5
    10f2:	47 94       	ror	r4
    10f4:	37 94       	ror	r3
    10f6:	27 94       	ror	r2
    10f8:	c3 cf       	rjmp	.-122    	; 0x1080 <__mulsf3+0xb0>
    10fa:	fa 85       	ldd	r31, Y+10	; 0x0a
    10fc:	ea 89       	ldd	r30, Y+18	; 0x12
    10fe:	2b 89       	ldd	r18, Y+19	; 0x13
    1100:	3c 89       	ldd	r19, Y+20	; 0x14
    1102:	8b 85       	ldd	r24, Y+11	; 0x0b
    1104:	9c 85       	ldd	r25, Y+12	; 0x0c
    1106:	28 0f       	add	r18, r24
    1108:	39 1f       	adc	r19, r25
    110a:	2e 5f       	subi	r18, 0xFE	; 254
    110c:	3f 4f       	sbci	r19, 0xFF	; 255
    110e:	17 c0       	rjmp	.+46     	; 0x113e <__mulsf3+0x16e>
    1110:	ca 01       	movw	r24, r20
    1112:	81 70       	andi	r24, 0x01	; 1
    1114:	90 70       	andi	r25, 0x00	; 0
    1116:	89 2b       	or	r24, r25
    1118:	61 f0       	breq	.+24     	; 0x1132 <__mulsf3+0x162>
    111a:	16 95       	lsr	r17
    111c:	07 95       	ror	r16
    111e:	f7 94       	ror	r15
    1120:	e7 94       	ror	r14
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	a0 e0       	ldi	r26, 0x00	; 0
    1128:	b0 e8       	ldi	r27, 0x80	; 128
    112a:	e8 2a       	or	r14, r24
    112c:	f9 2a       	or	r15, r25
    112e:	0a 2b       	or	r16, r26
    1130:	1b 2b       	or	r17, r27
    1132:	76 95       	lsr	r23
    1134:	67 95       	ror	r22
    1136:	57 95       	ror	r21
    1138:	47 95       	ror	r20
    113a:	2f 5f       	subi	r18, 0xFF	; 255
    113c:	3f 4f       	sbci	r19, 0xFF	; 255
    113e:	77 fd       	sbrc	r23, 7
    1140:	e7 cf       	rjmp	.-50     	; 0x1110 <__mulsf3+0x140>
    1142:	0c c0       	rjmp	.+24     	; 0x115c <__mulsf3+0x18c>
    1144:	44 0f       	add	r20, r20
    1146:	55 1f       	adc	r21, r21
    1148:	66 1f       	adc	r22, r22
    114a:	77 1f       	adc	r23, r23
    114c:	17 fd       	sbrc	r17, 7
    114e:	41 60       	ori	r20, 0x01	; 1
    1150:	ee 0c       	add	r14, r14
    1152:	ff 1c       	adc	r15, r15
    1154:	00 1f       	adc	r16, r16
    1156:	11 1f       	adc	r17, r17
    1158:	21 50       	subi	r18, 0x01	; 1
    115a:	30 40       	sbci	r19, 0x00	; 0
    115c:	40 30       	cpi	r20, 0x00	; 0
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	59 07       	cpc	r21, r25
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	69 07       	cpc	r22, r25
    1166:	90 e4       	ldi	r25, 0x40	; 64
    1168:	79 07       	cpc	r23, r25
    116a:	60 f3       	brcs	.-40     	; 0x1144 <__mulsf3+0x174>
    116c:	2b 8f       	std	Y+27, r18	; 0x1b
    116e:	3c 8f       	std	Y+28, r19	; 0x1c
    1170:	db 01       	movw	r26, r22
    1172:	ca 01       	movw	r24, r20
    1174:	8f 77       	andi	r24, 0x7F	; 127
    1176:	90 70       	andi	r25, 0x00	; 0
    1178:	a0 70       	andi	r26, 0x00	; 0
    117a:	b0 70       	andi	r27, 0x00	; 0
    117c:	80 34       	cpi	r24, 0x40	; 64
    117e:	91 05       	cpc	r25, r1
    1180:	a1 05       	cpc	r26, r1
    1182:	b1 05       	cpc	r27, r1
    1184:	61 f4       	brne	.+24     	; 0x119e <__mulsf3+0x1ce>
    1186:	47 fd       	sbrc	r20, 7
    1188:	0a c0       	rjmp	.+20     	; 0x119e <__mulsf3+0x1ce>
    118a:	e1 14       	cp	r14, r1
    118c:	f1 04       	cpc	r15, r1
    118e:	01 05       	cpc	r16, r1
    1190:	11 05       	cpc	r17, r1
    1192:	29 f0       	breq	.+10     	; 0x119e <__mulsf3+0x1ce>
    1194:	40 5c       	subi	r20, 0xC0	; 192
    1196:	5f 4f       	sbci	r21, 0xFF	; 255
    1198:	6f 4f       	sbci	r22, 0xFF	; 255
    119a:	7f 4f       	sbci	r23, 0xFF	; 255
    119c:	40 78       	andi	r20, 0x80	; 128
    119e:	1a 8e       	std	Y+26, r1	; 0x1a
    11a0:	fe 17       	cp	r31, r30
    11a2:	11 f0       	breq	.+4      	; 0x11a8 <__mulsf3+0x1d8>
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	8a 8f       	std	Y+26, r24	; 0x1a
    11a8:	4d 8f       	std	Y+29, r20	; 0x1d
    11aa:	5e 8f       	std	Y+30, r21	; 0x1e
    11ac:	6f 8f       	std	Y+31, r22	; 0x1f
    11ae:	78 a3       	std	Y+32, r23	; 0x20
    11b0:	83 e0       	ldi	r24, 0x03	; 3
    11b2:	89 8f       	std	Y+25, r24	; 0x19
    11b4:	ce 01       	movw	r24, r28
    11b6:	49 96       	adiw	r24, 0x19	; 25
    11b8:	0e 94 3a 0b 	call	0x1674	; 0x1674 <__pack_f>
    11bc:	a0 96       	adiw	r28, 0x20	; 32
    11be:	e2 e1       	ldi	r30, 0x12	; 18
    11c0:	0c 94 fc 0c 	jmp	0x19f8	; 0x19f8 <__epilogue_restores__>

000011c4 <__divsf3>:
    11c4:	a8 e1       	ldi	r26, 0x18	; 24
    11c6:	b0 e0       	ldi	r27, 0x00	; 0
    11c8:	e8 ee       	ldi	r30, 0xE8	; 232
    11ca:	f8 e0       	ldi	r31, 0x08	; 8
    11cc:	0c 94 e8 0c 	jmp	0x19d0	; 0x19d0 <__prologue_saves__+0x10>
    11d0:	69 83       	std	Y+1, r22	; 0x01
    11d2:	7a 83       	std	Y+2, r23	; 0x02
    11d4:	8b 83       	std	Y+3, r24	; 0x03
    11d6:	9c 83       	std	Y+4, r25	; 0x04
    11d8:	2d 83       	std	Y+5, r18	; 0x05
    11da:	3e 83       	std	Y+6, r19	; 0x06
    11dc:	4f 83       	std	Y+7, r20	; 0x07
    11de:	58 87       	std	Y+8, r21	; 0x08
    11e0:	b9 e0       	ldi	r27, 0x09	; 9
    11e2:	eb 2e       	mov	r14, r27
    11e4:	f1 2c       	mov	r15, r1
    11e6:	ec 0e       	add	r14, r28
    11e8:	fd 1e       	adc	r15, r29
    11ea:	ce 01       	movw	r24, r28
    11ec:	01 96       	adiw	r24, 0x01	; 1
    11ee:	b7 01       	movw	r22, r14
    11f0:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    11f4:	8e 01       	movw	r16, r28
    11f6:	0f 5e       	subi	r16, 0xEF	; 239
    11f8:	1f 4f       	sbci	r17, 0xFF	; 255
    11fa:	ce 01       	movw	r24, r28
    11fc:	05 96       	adiw	r24, 0x05	; 5
    11fe:	b8 01       	movw	r22, r16
    1200:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    1204:	29 85       	ldd	r18, Y+9	; 0x09
    1206:	22 30       	cpi	r18, 0x02	; 2
    1208:	08 f4       	brcc	.+2      	; 0x120c <__divsf3+0x48>
    120a:	7e c0       	rjmp	.+252    	; 0x1308 <__divsf3+0x144>
    120c:	39 89       	ldd	r19, Y+17	; 0x11
    120e:	32 30       	cpi	r19, 0x02	; 2
    1210:	10 f4       	brcc	.+4      	; 0x1216 <__divsf3+0x52>
    1212:	b8 01       	movw	r22, r16
    1214:	7c c0       	rjmp	.+248    	; 0x130e <__divsf3+0x14a>
    1216:	8a 85       	ldd	r24, Y+10	; 0x0a
    1218:	9a 89       	ldd	r25, Y+18	; 0x12
    121a:	89 27       	eor	r24, r25
    121c:	8a 87       	std	Y+10, r24	; 0x0a
    121e:	24 30       	cpi	r18, 0x04	; 4
    1220:	11 f0       	breq	.+4      	; 0x1226 <__divsf3+0x62>
    1222:	22 30       	cpi	r18, 0x02	; 2
    1224:	31 f4       	brne	.+12     	; 0x1232 <__divsf3+0x6e>
    1226:	23 17       	cp	r18, r19
    1228:	09 f0       	breq	.+2      	; 0x122c <__divsf3+0x68>
    122a:	6e c0       	rjmp	.+220    	; 0x1308 <__divsf3+0x144>
    122c:	60 e0       	ldi	r22, 0x00	; 0
    122e:	72 e0       	ldi	r23, 0x02	; 2
    1230:	6e c0       	rjmp	.+220    	; 0x130e <__divsf3+0x14a>
    1232:	34 30       	cpi	r19, 0x04	; 4
    1234:	39 f4       	brne	.+14     	; 0x1244 <__divsf3+0x80>
    1236:	1d 86       	std	Y+13, r1	; 0x0d
    1238:	1e 86       	std	Y+14, r1	; 0x0e
    123a:	1f 86       	std	Y+15, r1	; 0x0f
    123c:	18 8a       	std	Y+16, r1	; 0x10
    123e:	1c 86       	std	Y+12, r1	; 0x0c
    1240:	1b 86       	std	Y+11, r1	; 0x0b
    1242:	04 c0       	rjmp	.+8      	; 0x124c <__divsf3+0x88>
    1244:	32 30       	cpi	r19, 0x02	; 2
    1246:	21 f4       	brne	.+8      	; 0x1250 <__divsf3+0x8c>
    1248:	84 e0       	ldi	r24, 0x04	; 4
    124a:	89 87       	std	Y+9, r24	; 0x09
    124c:	b7 01       	movw	r22, r14
    124e:	5f c0       	rjmp	.+190    	; 0x130e <__divsf3+0x14a>
    1250:	2b 85       	ldd	r18, Y+11	; 0x0b
    1252:	3c 85       	ldd	r19, Y+12	; 0x0c
    1254:	8b 89       	ldd	r24, Y+19	; 0x13
    1256:	9c 89       	ldd	r25, Y+20	; 0x14
    1258:	28 1b       	sub	r18, r24
    125a:	39 0b       	sbc	r19, r25
    125c:	3c 87       	std	Y+12, r19	; 0x0c
    125e:	2b 87       	std	Y+11, r18	; 0x0b
    1260:	ed 84       	ldd	r14, Y+13	; 0x0d
    1262:	fe 84       	ldd	r15, Y+14	; 0x0e
    1264:	0f 85       	ldd	r16, Y+15	; 0x0f
    1266:	18 89       	ldd	r17, Y+16	; 0x10
    1268:	ad 88       	ldd	r10, Y+21	; 0x15
    126a:	be 88       	ldd	r11, Y+22	; 0x16
    126c:	cf 88       	ldd	r12, Y+23	; 0x17
    126e:	d8 8c       	ldd	r13, Y+24	; 0x18
    1270:	ea 14       	cp	r14, r10
    1272:	fb 04       	cpc	r15, r11
    1274:	0c 05       	cpc	r16, r12
    1276:	1d 05       	cpc	r17, r13
    1278:	40 f4       	brcc	.+16     	; 0x128a <__divsf3+0xc6>
    127a:	ee 0c       	add	r14, r14
    127c:	ff 1c       	adc	r15, r15
    127e:	00 1f       	adc	r16, r16
    1280:	11 1f       	adc	r17, r17
    1282:	21 50       	subi	r18, 0x01	; 1
    1284:	30 40       	sbci	r19, 0x00	; 0
    1286:	3c 87       	std	Y+12, r19	; 0x0c
    1288:	2b 87       	std	Y+11, r18	; 0x0b
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	40 e0       	ldi	r20, 0x00	; 0
    1290:	50 e0       	ldi	r21, 0x00	; 0
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	a0 e0       	ldi	r26, 0x00	; 0
    1298:	b0 e4       	ldi	r27, 0x40	; 64
    129a:	60 e0       	ldi	r22, 0x00	; 0
    129c:	70 e0       	ldi	r23, 0x00	; 0
    129e:	ea 14       	cp	r14, r10
    12a0:	fb 04       	cpc	r15, r11
    12a2:	0c 05       	cpc	r16, r12
    12a4:	1d 05       	cpc	r17, r13
    12a6:	40 f0       	brcs	.+16     	; 0x12b8 <__divsf3+0xf4>
    12a8:	28 2b       	or	r18, r24
    12aa:	39 2b       	or	r19, r25
    12ac:	4a 2b       	or	r20, r26
    12ae:	5b 2b       	or	r21, r27
    12b0:	ea 18       	sub	r14, r10
    12b2:	fb 08       	sbc	r15, r11
    12b4:	0c 09       	sbc	r16, r12
    12b6:	1d 09       	sbc	r17, r13
    12b8:	b6 95       	lsr	r27
    12ba:	a7 95       	ror	r26
    12bc:	97 95       	ror	r25
    12be:	87 95       	ror	r24
    12c0:	ee 0c       	add	r14, r14
    12c2:	ff 1c       	adc	r15, r15
    12c4:	00 1f       	adc	r16, r16
    12c6:	11 1f       	adc	r17, r17
    12c8:	6f 5f       	subi	r22, 0xFF	; 255
    12ca:	7f 4f       	sbci	r23, 0xFF	; 255
    12cc:	6f 31       	cpi	r22, 0x1F	; 31
    12ce:	71 05       	cpc	r23, r1
    12d0:	31 f7       	brne	.-52     	; 0x129e <__divsf3+0xda>
    12d2:	da 01       	movw	r26, r20
    12d4:	c9 01       	movw	r24, r18
    12d6:	8f 77       	andi	r24, 0x7F	; 127
    12d8:	90 70       	andi	r25, 0x00	; 0
    12da:	a0 70       	andi	r26, 0x00	; 0
    12dc:	b0 70       	andi	r27, 0x00	; 0
    12de:	80 34       	cpi	r24, 0x40	; 64
    12e0:	91 05       	cpc	r25, r1
    12e2:	a1 05       	cpc	r26, r1
    12e4:	b1 05       	cpc	r27, r1
    12e6:	61 f4       	brne	.+24     	; 0x1300 <__divsf3+0x13c>
    12e8:	27 fd       	sbrc	r18, 7
    12ea:	0a c0       	rjmp	.+20     	; 0x1300 <__divsf3+0x13c>
    12ec:	e1 14       	cp	r14, r1
    12ee:	f1 04       	cpc	r15, r1
    12f0:	01 05       	cpc	r16, r1
    12f2:	11 05       	cpc	r17, r1
    12f4:	29 f0       	breq	.+10     	; 0x1300 <__divsf3+0x13c>
    12f6:	20 5c       	subi	r18, 0xC0	; 192
    12f8:	3f 4f       	sbci	r19, 0xFF	; 255
    12fa:	4f 4f       	sbci	r20, 0xFF	; 255
    12fc:	5f 4f       	sbci	r21, 0xFF	; 255
    12fe:	20 78       	andi	r18, 0x80	; 128
    1300:	2d 87       	std	Y+13, r18	; 0x0d
    1302:	3e 87       	std	Y+14, r19	; 0x0e
    1304:	4f 87       	std	Y+15, r20	; 0x0f
    1306:	58 8b       	std	Y+16, r21	; 0x10
    1308:	be 01       	movw	r22, r28
    130a:	67 5f       	subi	r22, 0xF7	; 247
    130c:	7f 4f       	sbci	r23, 0xFF	; 255
    130e:	cb 01       	movw	r24, r22
    1310:	0e 94 3a 0b 	call	0x1674	; 0x1674 <__pack_f>
    1314:	68 96       	adiw	r28, 0x18	; 24
    1316:	ea e0       	ldi	r30, 0x0A	; 10
    1318:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__epilogue_restores__+0x10>

0000131c <__gtsf2>:
    131c:	a8 e1       	ldi	r26, 0x18	; 24
    131e:	b0 e0       	ldi	r27, 0x00	; 0
    1320:	e4 e9       	ldi	r30, 0x94	; 148
    1322:	f9 e0       	ldi	r31, 0x09	; 9
    1324:	0c 94 ec 0c 	jmp	0x19d8	; 0x19d8 <__prologue_saves__+0x18>
    1328:	69 83       	std	Y+1, r22	; 0x01
    132a:	7a 83       	std	Y+2, r23	; 0x02
    132c:	8b 83       	std	Y+3, r24	; 0x03
    132e:	9c 83       	std	Y+4, r25	; 0x04
    1330:	2d 83       	std	Y+5, r18	; 0x05
    1332:	3e 83       	std	Y+6, r19	; 0x06
    1334:	4f 83       	std	Y+7, r20	; 0x07
    1336:	58 87       	std	Y+8, r21	; 0x08
    1338:	89 e0       	ldi	r24, 0x09	; 9
    133a:	e8 2e       	mov	r14, r24
    133c:	f1 2c       	mov	r15, r1
    133e:	ec 0e       	add	r14, r28
    1340:	fd 1e       	adc	r15, r29
    1342:	ce 01       	movw	r24, r28
    1344:	01 96       	adiw	r24, 0x01	; 1
    1346:	b7 01       	movw	r22, r14
    1348:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    134c:	8e 01       	movw	r16, r28
    134e:	0f 5e       	subi	r16, 0xEF	; 239
    1350:	1f 4f       	sbci	r17, 0xFF	; 255
    1352:	ce 01       	movw	r24, r28
    1354:	05 96       	adiw	r24, 0x05	; 5
    1356:	b8 01       	movw	r22, r16
    1358:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    135c:	89 85       	ldd	r24, Y+9	; 0x09
    135e:	82 30       	cpi	r24, 0x02	; 2
    1360:	40 f0       	brcs	.+16     	; 0x1372 <__gtsf2+0x56>
    1362:	89 89       	ldd	r24, Y+17	; 0x11
    1364:	82 30       	cpi	r24, 0x02	; 2
    1366:	28 f0       	brcs	.+10     	; 0x1372 <__gtsf2+0x56>
    1368:	c7 01       	movw	r24, r14
    136a:	b8 01       	movw	r22, r16
    136c:	0e 94 87 0c 	call	0x190e	; 0x190e <__fpcmp_parts_f>
    1370:	01 c0       	rjmp	.+2      	; 0x1374 <__gtsf2+0x58>
    1372:	8f ef       	ldi	r24, 0xFF	; 255
    1374:	68 96       	adiw	r28, 0x18	; 24
    1376:	e6 e0       	ldi	r30, 0x06	; 6
    1378:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__epilogue_restores__+0x18>

0000137c <__gesf2>:
    137c:	a8 e1       	ldi	r26, 0x18	; 24
    137e:	b0 e0       	ldi	r27, 0x00	; 0
    1380:	e4 ec       	ldi	r30, 0xC4	; 196
    1382:	f9 e0       	ldi	r31, 0x09	; 9
    1384:	0c 94 ec 0c 	jmp	0x19d8	; 0x19d8 <__prologue_saves__+0x18>
    1388:	69 83       	std	Y+1, r22	; 0x01
    138a:	7a 83       	std	Y+2, r23	; 0x02
    138c:	8b 83       	std	Y+3, r24	; 0x03
    138e:	9c 83       	std	Y+4, r25	; 0x04
    1390:	2d 83       	std	Y+5, r18	; 0x05
    1392:	3e 83       	std	Y+6, r19	; 0x06
    1394:	4f 83       	std	Y+7, r20	; 0x07
    1396:	58 87       	std	Y+8, r21	; 0x08
    1398:	89 e0       	ldi	r24, 0x09	; 9
    139a:	e8 2e       	mov	r14, r24
    139c:	f1 2c       	mov	r15, r1
    139e:	ec 0e       	add	r14, r28
    13a0:	fd 1e       	adc	r15, r29
    13a2:	ce 01       	movw	r24, r28
    13a4:	01 96       	adiw	r24, 0x01	; 1
    13a6:	b7 01       	movw	r22, r14
    13a8:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    13ac:	8e 01       	movw	r16, r28
    13ae:	0f 5e       	subi	r16, 0xEF	; 239
    13b0:	1f 4f       	sbci	r17, 0xFF	; 255
    13b2:	ce 01       	movw	r24, r28
    13b4:	05 96       	adiw	r24, 0x05	; 5
    13b6:	b8 01       	movw	r22, r16
    13b8:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    13bc:	89 85       	ldd	r24, Y+9	; 0x09
    13be:	82 30       	cpi	r24, 0x02	; 2
    13c0:	40 f0       	brcs	.+16     	; 0x13d2 <__gesf2+0x56>
    13c2:	89 89       	ldd	r24, Y+17	; 0x11
    13c4:	82 30       	cpi	r24, 0x02	; 2
    13c6:	28 f0       	brcs	.+10     	; 0x13d2 <__gesf2+0x56>
    13c8:	c7 01       	movw	r24, r14
    13ca:	b8 01       	movw	r22, r16
    13cc:	0e 94 87 0c 	call	0x190e	; 0x190e <__fpcmp_parts_f>
    13d0:	01 c0       	rjmp	.+2      	; 0x13d4 <__gesf2+0x58>
    13d2:	8f ef       	ldi	r24, 0xFF	; 255
    13d4:	68 96       	adiw	r28, 0x18	; 24
    13d6:	e6 e0       	ldi	r30, 0x06	; 6
    13d8:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__epilogue_restores__+0x18>

000013dc <__ltsf2>:
    13dc:	a8 e1       	ldi	r26, 0x18	; 24
    13de:	b0 e0       	ldi	r27, 0x00	; 0
    13e0:	e4 ef       	ldi	r30, 0xF4	; 244
    13e2:	f9 e0       	ldi	r31, 0x09	; 9
    13e4:	0c 94 ec 0c 	jmp	0x19d8	; 0x19d8 <__prologue_saves__+0x18>
    13e8:	69 83       	std	Y+1, r22	; 0x01
    13ea:	7a 83       	std	Y+2, r23	; 0x02
    13ec:	8b 83       	std	Y+3, r24	; 0x03
    13ee:	9c 83       	std	Y+4, r25	; 0x04
    13f0:	2d 83       	std	Y+5, r18	; 0x05
    13f2:	3e 83       	std	Y+6, r19	; 0x06
    13f4:	4f 83       	std	Y+7, r20	; 0x07
    13f6:	58 87       	std	Y+8, r21	; 0x08
    13f8:	89 e0       	ldi	r24, 0x09	; 9
    13fa:	e8 2e       	mov	r14, r24
    13fc:	f1 2c       	mov	r15, r1
    13fe:	ec 0e       	add	r14, r28
    1400:	fd 1e       	adc	r15, r29
    1402:	ce 01       	movw	r24, r28
    1404:	01 96       	adiw	r24, 0x01	; 1
    1406:	b7 01       	movw	r22, r14
    1408:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    140c:	8e 01       	movw	r16, r28
    140e:	0f 5e       	subi	r16, 0xEF	; 239
    1410:	1f 4f       	sbci	r17, 0xFF	; 255
    1412:	ce 01       	movw	r24, r28
    1414:	05 96       	adiw	r24, 0x05	; 5
    1416:	b8 01       	movw	r22, r16
    1418:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    141c:	89 85       	ldd	r24, Y+9	; 0x09
    141e:	82 30       	cpi	r24, 0x02	; 2
    1420:	40 f0       	brcs	.+16     	; 0x1432 <__ltsf2+0x56>
    1422:	89 89       	ldd	r24, Y+17	; 0x11
    1424:	82 30       	cpi	r24, 0x02	; 2
    1426:	28 f0       	brcs	.+10     	; 0x1432 <__ltsf2+0x56>
    1428:	c7 01       	movw	r24, r14
    142a:	b8 01       	movw	r22, r16
    142c:	0e 94 87 0c 	call	0x190e	; 0x190e <__fpcmp_parts_f>
    1430:	01 c0       	rjmp	.+2      	; 0x1434 <__ltsf2+0x58>
    1432:	81 e0       	ldi	r24, 0x01	; 1
    1434:	68 96       	adiw	r28, 0x18	; 24
    1436:	e6 e0       	ldi	r30, 0x06	; 6
    1438:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__epilogue_restores__+0x18>

0000143c <__fixsfsi>:
    143c:	ac e0       	ldi	r26, 0x0C	; 12
    143e:	b0 e0       	ldi	r27, 0x00	; 0
    1440:	e4 e2       	ldi	r30, 0x24	; 36
    1442:	fa e0       	ldi	r31, 0x0A	; 10
    1444:	0c 94 f0 0c 	jmp	0x19e0	; 0x19e0 <__prologue_saves__+0x20>
    1448:	69 83       	std	Y+1, r22	; 0x01
    144a:	7a 83       	std	Y+2, r23	; 0x02
    144c:	8b 83       	std	Y+3, r24	; 0x03
    144e:	9c 83       	std	Y+4, r25	; 0x04
    1450:	ce 01       	movw	r24, r28
    1452:	01 96       	adiw	r24, 0x01	; 1
    1454:	be 01       	movw	r22, r28
    1456:	6b 5f       	subi	r22, 0xFB	; 251
    1458:	7f 4f       	sbci	r23, 0xFF	; 255
    145a:	0e 94 0f 0c 	call	0x181e	; 0x181e <__unpack_f>
    145e:	8d 81       	ldd	r24, Y+5	; 0x05
    1460:	82 30       	cpi	r24, 0x02	; 2
    1462:	61 f1       	breq	.+88     	; 0x14bc <__fixsfsi+0x80>
    1464:	82 30       	cpi	r24, 0x02	; 2
    1466:	50 f1       	brcs	.+84     	; 0x14bc <__fixsfsi+0x80>
    1468:	84 30       	cpi	r24, 0x04	; 4
    146a:	21 f4       	brne	.+8      	; 0x1474 <__fixsfsi+0x38>
    146c:	8e 81       	ldd	r24, Y+6	; 0x06
    146e:	88 23       	and	r24, r24
    1470:	51 f1       	breq	.+84     	; 0x14c6 <__fixsfsi+0x8a>
    1472:	2e c0       	rjmp	.+92     	; 0x14d0 <__fixsfsi+0x94>
    1474:	2f 81       	ldd	r18, Y+7	; 0x07
    1476:	38 85       	ldd	r19, Y+8	; 0x08
    1478:	37 fd       	sbrc	r19, 7
    147a:	20 c0       	rjmp	.+64     	; 0x14bc <__fixsfsi+0x80>
    147c:	6e 81       	ldd	r22, Y+6	; 0x06
    147e:	2f 31       	cpi	r18, 0x1F	; 31
    1480:	31 05       	cpc	r19, r1
    1482:	1c f0       	brlt	.+6      	; 0x148a <__fixsfsi+0x4e>
    1484:	66 23       	and	r22, r22
    1486:	f9 f0       	breq	.+62     	; 0x14c6 <__fixsfsi+0x8a>
    1488:	23 c0       	rjmp	.+70     	; 0x14d0 <__fixsfsi+0x94>
    148a:	8e e1       	ldi	r24, 0x1E	; 30
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	82 1b       	sub	r24, r18
    1490:	93 0b       	sbc	r25, r19
    1492:	29 85       	ldd	r18, Y+9	; 0x09
    1494:	3a 85       	ldd	r19, Y+10	; 0x0a
    1496:	4b 85       	ldd	r20, Y+11	; 0x0b
    1498:	5c 85       	ldd	r21, Y+12	; 0x0c
    149a:	04 c0       	rjmp	.+8      	; 0x14a4 <__fixsfsi+0x68>
    149c:	56 95       	lsr	r21
    149e:	47 95       	ror	r20
    14a0:	37 95       	ror	r19
    14a2:	27 95       	ror	r18
    14a4:	8a 95       	dec	r24
    14a6:	d2 f7       	brpl	.-12     	; 0x149c <__fixsfsi+0x60>
    14a8:	66 23       	and	r22, r22
    14aa:	b1 f0       	breq	.+44     	; 0x14d8 <__fixsfsi+0x9c>
    14ac:	50 95       	com	r21
    14ae:	40 95       	com	r20
    14b0:	30 95       	com	r19
    14b2:	21 95       	neg	r18
    14b4:	3f 4f       	sbci	r19, 0xFF	; 255
    14b6:	4f 4f       	sbci	r20, 0xFF	; 255
    14b8:	5f 4f       	sbci	r21, 0xFF	; 255
    14ba:	0e c0       	rjmp	.+28     	; 0x14d8 <__fixsfsi+0x9c>
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	40 e0       	ldi	r20, 0x00	; 0
    14c2:	50 e0       	ldi	r21, 0x00	; 0
    14c4:	09 c0       	rjmp	.+18     	; 0x14d8 <__fixsfsi+0x9c>
    14c6:	2f ef       	ldi	r18, 0xFF	; 255
    14c8:	3f ef       	ldi	r19, 0xFF	; 255
    14ca:	4f ef       	ldi	r20, 0xFF	; 255
    14cc:	5f e7       	ldi	r21, 0x7F	; 127
    14ce:	04 c0       	rjmp	.+8      	; 0x14d8 <__fixsfsi+0x9c>
    14d0:	20 e0       	ldi	r18, 0x00	; 0
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	40 e0       	ldi	r20, 0x00	; 0
    14d6:	50 e8       	ldi	r21, 0x80	; 128
    14d8:	b9 01       	movw	r22, r18
    14da:	ca 01       	movw	r24, r20
    14dc:	2c 96       	adiw	r28, 0x0c	; 12
    14de:	e2 e0       	ldi	r30, 0x02	; 2
    14e0:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <__epilogue_restores__+0x20>

000014e4 <__floatunsisf>:
    14e4:	a8 e0       	ldi	r26, 0x08	; 8
    14e6:	b0 e0       	ldi	r27, 0x00	; 0
    14e8:	e8 e7       	ldi	r30, 0x78	; 120
    14ea:	fa e0       	ldi	r31, 0x0A	; 10
    14ec:	0c 94 e8 0c 	jmp	0x19d0	; 0x19d0 <__prologue_saves__+0x10>
    14f0:	7b 01       	movw	r14, r22
    14f2:	8c 01       	movw	r16, r24
    14f4:	61 15       	cp	r22, r1
    14f6:	71 05       	cpc	r23, r1
    14f8:	81 05       	cpc	r24, r1
    14fa:	91 05       	cpc	r25, r1
    14fc:	19 f4       	brne	.+6      	; 0x1504 <__floatunsisf+0x20>
    14fe:	82 e0       	ldi	r24, 0x02	; 2
    1500:	89 83       	std	Y+1, r24	; 0x01
    1502:	60 c0       	rjmp	.+192    	; 0x15c4 <__floatunsisf+0xe0>
    1504:	83 e0       	ldi	r24, 0x03	; 3
    1506:	89 83       	std	Y+1, r24	; 0x01
    1508:	8e e1       	ldi	r24, 0x1E	; 30
    150a:	c8 2e       	mov	r12, r24
    150c:	d1 2c       	mov	r13, r1
    150e:	dc 82       	std	Y+4, r13	; 0x04
    1510:	cb 82       	std	Y+3, r12	; 0x03
    1512:	ed 82       	std	Y+5, r14	; 0x05
    1514:	fe 82       	std	Y+6, r15	; 0x06
    1516:	0f 83       	std	Y+7, r16	; 0x07
    1518:	18 87       	std	Y+8, r17	; 0x08
    151a:	c8 01       	movw	r24, r16
    151c:	b7 01       	movw	r22, r14
    151e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__clzsi2>
    1522:	fc 01       	movw	r30, r24
    1524:	31 97       	sbiw	r30, 0x01	; 1
    1526:	f7 ff       	sbrs	r31, 7
    1528:	3b c0       	rjmp	.+118    	; 0x15a0 <__floatunsisf+0xbc>
    152a:	22 27       	eor	r18, r18
    152c:	33 27       	eor	r19, r19
    152e:	2e 1b       	sub	r18, r30
    1530:	3f 0b       	sbc	r19, r31
    1532:	57 01       	movw	r10, r14
    1534:	68 01       	movw	r12, r16
    1536:	02 2e       	mov	r0, r18
    1538:	04 c0       	rjmp	.+8      	; 0x1542 <__floatunsisf+0x5e>
    153a:	d6 94       	lsr	r13
    153c:	c7 94       	ror	r12
    153e:	b7 94       	ror	r11
    1540:	a7 94       	ror	r10
    1542:	0a 94       	dec	r0
    1544:	d2 f7       	brpl	.-12     	; 0x153a <__floatunsisf+0x56>
    1546:	40 e0       	ldi	r20, 0x00	; 0
    1548:	50 e0       	ldi	r21, 0x00	; 0
    154a:	60 e0       	ldi	r22, 0x00	; 0
    154c:	70 e0       	ldi	r23, 0x00	; 0
    154e:	81 e0       	ldi	r24, 0x01	; 1
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	a0 e0       	ldi	r26, 0x00	; 0
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	04 c0       	rjmp	.+8      	; 0x1560 <__floatunsisf+0x7c>
    1558:	88 0f       	add	r24, r24
    155a:	99 1f       	adc	r25, r25
    155c:	aa 1f       	adc	r26, r26
    155e:	bb 1f       	adc	r27, r27
    1560:	2a 95       	dec	r18
    1562:	d2 f7       	brpl	.-12     	; 0x1558 <__floatunsisf+0x74>
    1564:	01 97       	sbiw	r24, 0x01	; 1
    1566:	a1 09       	sbc	r26, r1
    1568:	b1 09       	sbc	r27, r1
    156a:	8e 21       	and	r24, r14
    156c:	9f 21       	and	r25, r15
    156e:	a0 23       	and	r26, r16
    1570:	b1 23       	and	r27, r17
    1572:	00 97       	sbiw	r24, 0x00	; 0
    1574:	a1 05       	cpc	r26, r1
    1576:	b1 05       	cpc	r27, r1
    1578:	21 f0       	breq	.+8      	; 0x1582 <__floatunsisf+0x9e>
    157a:	41 e0       	ldi	r20, 0x01	; 1
    157c:	50 e0       	ldi	r21, 0x00	; 0
    157e:	60 e0       	ldi	r22, 0x00	; 0
    1580:	70 e0       	ldi	r23, 0x00	; 0
    1582:	4a 29       	or	r20, r10
    1584:	5b 29       	or	r21, r11
    1586:	6c 29       	or	r22, r12
    1588:	7d 29       	or	r23, r13
    158a:	4d 83       	std	Y+5, r20	; 0x05
    158c:	5e 83       	std	Y+6, r21	; 0x06
    158e:	6f 83       	std	Y+7, r22	; 0x07
    1590:	78 87       	std	Y+8, r23	; 0x08
    1592:	8e e1       	ldi	r24, 0x1E	; 30
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	8e 1b       	sub	r24, r30
    1598:	9f 0b       	sbc	r25, r31
    159a:	9c 83       	std	Y+4, r25	; 0x04
    159c:	8b 83       	std	Y+3, r24	; 0x03
    159e:	12 c0       	rjmp	.+36     	; 0x15c4 <__floatunsisf+0xe0>
    15a0:	30 97       	sbiw	r30, 0x00	; 0
    15a2:	81 f0       	breq	.+32     	; 0x15c4 <__floatunsisf+0xe0>
    15a4:	0e 2e       	mov	r0, r30
    15a6:	04 c0       	rjmp	.+8      	; 0x15b0 <__floatunsisf+0xcc>
    15a8:	ee 0c       	add	r14, r14
    15aa:	ff 1c       	adc	r15, r15
    15ac:	00 1f       	adc	r16, r16
    15ae:	11 1f       	adc	r17, r17
    15b0:	0a 94       	dec	r0
    15b2:	d2 f7       	brpl	.-12     	; 0x15a8 <__floatunsisf+0xc4>
    15b4:	ed 82       	std	Y+5, r14	; 0x05
    15b6:	fe 82       	std	Y+6, r15	; 0x06
    15b8:	0f 83       	std	Y+7, r16	; 0x07
    15ba:	18 87       	std	Y+8, r17	; 0x08
    15bc:	ce 1a       	sub	r12, r30
    15be:	df 0a       	sbc	r13, r31
    15c0:	dc 82       	std	Y+4, r13	; 0x04
    15c2:	cb 82       	std	Y+3, r12	; 0x03
    15c4:	1a 82       	std	Y+2, r1	; 0x02
    15c6:	ce 01       	movw	r24, r28
    15c8:	01 96       	adiw	r24, 0x01	; 1
    15ca:	0e 94 3a 0b 	call	0x1674	; 0x1674 <__pack_f>
    15ce:	28 96       	adiw	r28, 0x08	; 8
    15d0:	ea e0       	ldi	r30, 0x0A	; 10
    15d2:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__epilogue_restores__+0x10>

000015d6 <__clzsi2>:
    15d6:	ef 92       	push	r14
    15d8:	ff 92       	push	r15
    15da:	0f 93       	push	r16
    15dc:	1f 93       	push	r17
    15de:	7b 01       	movw	r14, r22
    15e0:	8c 01       	movw	r16, r24
    15e2:	80 e0       	ldi	r24, 0x00	; 0
    15e4:	e8 16       	cp	r14, r24
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	f8 06       	cpc	r15, r24
    15ea:	81 e0       	ldi	r24, 0x01	; 1
    15ec:	08 07       	cpc	r16, r24
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	18 07       	cpc	r17, r24
    15f2:	88 f4       	brcc	.+34     	; 0x1616 <__clzsi2+0x40>
    15f4:	8f ef       	ldi	r24, 0xFF	; 255
    15f6:	e8 16       	cp	r14, r24
    15f8:	f1 04       	cpc	r15, r1
    15fa:	01 05       	cpc	r16, r1
    15fc:	11 05       	cpc	r17, r1
    15fe:	31 f0       	breq	.+12     	; 0x160c <__clzsi2+0x36>
    1600:	28 f0       	brcs	.+10     	; 0x160c <__clzsi2+0x36>
    1602:	88 e0       	ldi	r24, 0x08	; 8
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	a0 e0       	ldi	r26, 0x00	; 0
    1608:	b0 e0       	ldi	r27, 0x00	; 0
    160a:	17 c0       	rjmp	.+46     	; 0x163a <__clzsi2+0x64>
    160c:	80 e0       	ldi	r24, 0x00	; 0
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	a0 e0       	ldi	r26, 0x00	; 0
    1612:	b0 e0       	ldi	r27, 0x00	; 0
    1614:	12 c0       	rjmp	.+36     	; 0x163a <__clzsi2+0x64>
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	e8 16       	cp	r14, r24
    161a:	80 e0       	ldi	r24, 0x00	; 0
    161c:	f8 06       	cpc	r15, r24
    161e:	80 e0       	ldi	r24, 0x00	; 0
    1620:	08 07       	cpc	r16, r24
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	18 07       	cpc	r17, r24
    1626:	28 f0       	brcs	.+10     	; 0x1632 <__clzsi2+0x5c>
    1628:	88 e1       	ldi	r24, 0x18	; 24
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	a0 e0       	ldi	r26, 0x00	; 0
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	04 c0       	rjmp	.+8      	; 0x163a <__clzsi2+0x64>
    1632:	80 e1       	ldi	r24, 0x10	; 16
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	a0 e0       	ldi	r26, 0x00	; 0
    1638:	b0 e0       	ldi	r27, 0x00	; 0
    163a:	20 e2       	ldi	r18, 0x20	; 32
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	40 e0       	ldi	r20, 0x00	; 0
    1640:	50 e0       	ldi	r21, 0x00	; 0
    1642:	28 1b       	sub	r18, r24
    1644:	39 0b       	sbc	r19, r25
    1646:	4a 0b       	sbc	r20, r26
    1648:	5b 0b       	sbc	r21, r27
    164a:	04 c0       	rjmp	.+8      	; 0x1654 <__clzsi2+0x7e>
    164c:	16 95       	lsr	r17
    164e:	07 95       	ror	r16
    1650:	f7 94       	ror	r15
    1652:	e7 94       	ror	r14
    1654:	8a 95       	dec	r24
    1656:	d2 f7       	brpl	.-12     	; 0x164c <__clzsi2+0x76>
    1658:	f7 01       	movw	r30, r14
    165a:	e8 5f       	subi	r30, 0xF8	; 248
    165c:	fd 4f       	sbci	r31, 0xFD	; 253
    165e:	80 81       	ld	r24, Z
    1660:	28 1b       	sub	r18, r24
    1662:	31 09       	sbc	r19, r1
    1664:	41 09       	sbc	r20, r1
    1666:	51 09       	sbc	r21, r1
    1668:	c9 01       	movw	r24, r18
    166a:	1f 91       	pop	r17
    166c:	0f 91       	pop	r16
    166e:	ff 90       	pop	r15
    1670:	ef 90       	pop	r14
    1672:	08 95       	ret

00001674 <__pack_f>:
    1674:	df 92       	push	r13
    1676:	ef 92       	push	r14
    1678:	ff 92       	push	r15
    167a:	0f 93       	push	r16
    167c:	1f 93       	push	r17
    167e:	fc 01       	movw	r30, r24
    1680:	e4 80       	ldd	r14, Z+4	; 0x04
    1682:	f5 80       	ldd	r15, Z+5	; 0x05
    1684:	06 81       	ldd	r16, Z+6	; 0x06
    1686:	17 81       	ldd	r17, Z+7	; 0x07
    1688:	d1 80       	ldd	r13, Z+1	; 0x01
    168a:	80 81       	ld	r24, Z
    168c:	82 30       	cpi	r24, 0x02	; 2
    168e:	48 f4       	brcc	.+18     	; 0x16a2 <__pack_f+0x2e>
    1690:	80 e0       	ldi	r24, 0x00	; 0
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	a0 e1       	ldi	r26, 0x10	; 16
    1696:	b0 e0       	ldi	r27, 0x00	; 0
    1698:	e8 2a       	or	r14, r24
    169a:	f9 2a       	or	r15, r25
    169c:	0a 2b       	or	r16, r26
    169e:	1b 2b       	or	r17, r27
    16a0:	a5 c0       	rjmp	.+330    	; 0x17ec <__pack_f+0x178>
    16a2:	84 30       	cpi	r24, 0x04	; 4
    16a4:	09 f4       	brne	.+2      	; 0x16a8 <__pack_f+0x34>
    16a6:	9f c0       	rjmp	.+318    	; 0x17e6 <__pack_f+0x172>
    16a8:	82 30       	cpi	r24, 0x02	; 2
    16aa:	21 f4       	brne	.+8      	; 0x16b4 <__pack_f+0x40>
    16ac:	ee 24       	eor	r14, r14
    16ae:	ff 24       	eor	r15, r15
    16b0:	87 01       	movw	r16, r14
    16b2:	05 c0       	rjmp	.+10     	; 0x16be <__pack_f+0x4a>
    16b4:	e1 14       	cp	r14, r1
    16b6:	f1 04       	cpc	r15, r1
    16b8:	01 05       	cpc	r16, r1
    16ba:	11 05       	cpc	r17, r1
    16bc:	19 f4       	brne	.+6      	; 0x16c4 <__pack_f+0x50>
    16be:	e0 e0       	ldi	r30, 0x00	; 0
    16c0:	f0 e0       	ldi	r31, 0x00	; 0
    16c2:	96 c0       	rjmp	.+300    	; 0x17f0 <__pack_f+0x17c>
    16c4:	62 81       	ldd	r22, Z+2	; 0x02
    16c6:	73 81       	ldd	r23, Z+3	; 0x03
    16c8:	9f ef       	ldi	r25, 0xFF	; 255
    16ca:	62 38       	cpi	r22, 0x82	; 130
    16cc:	79 07       	cpc	r23, r25
    16ce:	0c f0       	brlt	.+2      	; 0x16d2 <__pack_f+0x5e>
    16d0:	5b c0       	rjmp	.+182    	; 0x1788 <__pack_f+0x114>
    16d2:	22 e8       	ldi	r18, 0x82	; 130
    16d4:	3f ef       	ldi	r19, 0xFF	; 255
    16d6:	26 1b       	sub	r18, r22
    16d8:	37 0b       	sbc	r19, r23
    16da:	2a 31       	cpi	r18, 0x1A	; 26
    16dc:	31 05       	cpc	r19, r1
    16de:	2c f0       	brlt	.+10     	; 0x16ea <__pack_f+0x76>
    16e0:	20 e0       	ldi	r18, 0x00	; 0
    16e2:	30 e0       	ldi	r19, 0x00	; 0
    16e4:	40 e0       	ldi	r20, 0x00	; 0
    16e6:	50 e0       	ldi	r21, 0x00	; 0
    16e8:	2a c0       	rjmp	.+84     	; 0x173e <__pack_f+0xca>
    16ea:	b8 01       	movw	r22, r16
    16ec:	a7 01       	movw	r20, r14
    16ee:	02 2e       	mov	r0, r18
    16f0:	04 c0       	rjmp	.+8      	; 0x16fa <__pack_f+0x86>
    16f2:	76 95       	lsr	r23
    16f4:	67 95       	ror	r22
    16f6:	57 95       	ror	r21
    16f8:	47 95       	ror	r20
    16fa:	0a 94       	dec	r0
    16fc:	d2 f7       	brpl	.-12     	; 0x16f2 <__pack_f+0x7e>
    16fe:	81 e0       	ldi	r24, 0x01	; 1
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	a0 e0       	ldi	r26, 0x00	; 0
    1704:	b0 e0       	ldi	r27, 0x00	; 0
    1706:	04 c0       	rjmp	.+8      	; 0x1710 <__pack_f+0x9c>
    1708:	88 0f       	add	r24, r24
    170a:	99 1f       	adc	r25, r25
    170c:	aa 1f       	adc	r26, r26
    170e:	bb 1f       	adc	r27, r27
    1710:	2a 95       	dec	r18
    1712:	d2 f7       	brpl	.-12     	; 0x1708 <__pack_f+0x94>
    1714:	01 97       	sbiw	r24, 0x01	; 1
    1716:	a1 09       	sbc	r26, r1
    1718:	b1 09       	sbc	r27, r1
    171a:	8e 21       	and	r24, r14
    171c:	9f 21       	and	r25, r15
    171e:	a0 23       	and	r26, r16
    1720:	b1 23       	and	r27, r17
    1722:	00 97       	sbiw	r24, 0x00	; 0
    1724:	a1 05       	cpc	r26, r1
    1726:	b1 05       	cpc	r27, r1
    1728:	21 f0       	breq	.+8      	; 0x1732 <__pack_f+0xbe>
    172a:	81 e0       	ldi	r24, 0x01	; 1
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	a0 e0       	ldi	r26, 0x00	; 0
    1730:	b0 e0       	ldi	r27, 0x00	; 0
    1732:	9a 01       	movw	r18, r20
    1734:	ab 01       	movw	r20, r22
    1736:	28 2b       	or	r18, r24
    1738:	39 2b       	or	r19, r25
    173a:	4a 2b       	or	r20, r26
    173c:	5b 2b       	or	r21, r27
    173e:	da 01       	movw	r26, r20
    1740:	c9 01       	movw	r24, r18
    1742:	8f 77       	andi	r24, 0x7F	; 127
    1744:	90 70       	andi	r25, 0x00	; 0
    1746:	a0 70       	andi	r26, 0x00	; 0
    1748:	b0 70       	andi	r27, 0x00	; 0
    174a:	80 34       	cpi	r24, 0x40	; 64
    174c:	91 05       	cpc	r25, r1
    174e:	a1 05       	cpc	r26, r1
    1750:	b1 05       	cpc	r27, r1
    1752:	39 f4       	brne	.+14     	; 0x1762 <__pack_f+0xee>
    1754:	27 ff       	sbrs	r18, 7
    1756:	09 c0       	rjmp	.+18     	; 0x176a <__pack_f+0xf6>
    1758:	20 5c       	subi	r18, 0xC0	; 192
    175a:	3f 4f       	sbci	r19, 0xFF	; 255
    175c:	4f 4f       	sbci	r20, 0xFF	; 255
    175e:	5f 4f       	sbci	r21, 0xFF	; 255
    1760:	04 c0       	rjmp	.+8      	; 0x176a <__pack_f+0xf6>
    1762:	21 5c       	subi	r18, 0xC1	; 193
    1764:	3f 4f       	sbci	r19, 0xFF	; 255
    1766:	4f 4f       	sbci	r20, 0xFF	; 255
    1768:	5f 4f       	sbci	r21, 0xFF	; 255
    176a:	e0 e0       	ldi	r30, 0x00	; 0
    176c:	f0 e0       	ldi	r31, 0x00	; 0
    176e:	20 30       	cpi	r18, 0x00	; 0
    1770:	a0 e0       	ldi	r26, 0x00	; 0
    1772:	3a 07       	cpc	r19, r26
    1774:	a0 e0       	ldi	r26, 0x00	; 0
    1776:	4a 07       	cpc	r20, r26
    1778:	a0 e4       	ldi	r26, 0x40	; 64
    177a:	5a 07       	cpc	r21, r26
    177c:	10 f0       	brcs	.+4      	; 0x1782 <__pack_f+0x10e>
    177e:	e1 e0       	ldi	r30, 0x01	; 1
    1780:	f0 e0       	ldi	r31, 0x00	; 0
    1782:	79 01       	movw	r14, r18
    1784:	8a 01       	movw	r16, r20
    1786:	27 c0       	rjmp	.+78     	; 0x17d6 <__pack_f+0x162>
    1788:	60 38       	cpi	r22, 0x80	; 128
    178a:	71 05       	cpc	r23, r1
    178c:	64 f5       	brge	.+88     	; 0x17e6 <__pack_f+0x172>
    178e:	fb 01       	movw	r30, r22
    1790:	e1 58       	subi	r30, 0x81	; 129
    1792:	ff 4f       	sbci	r31, 0xFF	; 255
    1794:	d8 01       	movw	r26, r16
    1796:	c7 01       	movw	r24, r14
    1798:	8f 77       	andi	r24, 0x7F	; 127
    179a:	90 70       	andi	r25, 0x00	; 0
    179c:	a0 70       	andi	r26, 0x00	; 0
    179e:	b0 70       	andi	r27, 0x00	; 0
    17a0:	80 34       	cpi	r24, 0x40	; 64
    17a2:	91 05       	cpc	r25, r1
    17a4:	a1 05       	cpc	r26, r1
    17a6:	b1 05       	cpc	r27, r1
    17a8:	39 f4       	brne	.+14     	; 0x17b8 <__pack_f+0x144>
    17aa:	e7 fe       	sbrs	r14, 7
    17ac:	0d c0       	rjmp	.+26     	; 0x17c8 <__pack_f+0x154>
    17ae:	80 e4       	ldi	r24, 0x40	; 64
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	a0 e0       	ldi	r26, 0x00	; 0
    17b4:	b0 e0       	ldi	r27, 0x00	; 0
    17b6:	04 c0       	rjmp	.+8      	; 0x17c0 <__pack_f+0x14c>
    17b8:	8f e3       	ldi	r24, 0x3F	; 63
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	a0 e0       	ldi	r26, 0x00	; 0
    17be:	b0 e0       	ldi	r27, 0x00	; 0
    17c0:	e8 0e       	add	r14, r24
    17c2:	f9 1e       	adc	r15, r25
    17c4:	0a 1f       	adc	r16, r26
    17c6:	1b 1f       	adc	r17, r27
    17c8:	17 ff       	sbrs	r17, 7
    17ca:	05 c0       	rjmp	.+10     	; 0x17d6 <__pack_f+0x162>
    17cc:	16 95       	lsr	r17
    17ce:	07 95       	ror	r16
    17d0:	f7 94       	ror	r15
    17d2:	e7 94       	ror	r14
    17d4:	31 96       	adiw	r30, 0x01	; 1
    17d6:	87 e0       	ldi	r24, 0x07	; 7
    17d8:	16 95       	lsr	r17
    17da:	07 95       	ror	r16
    17dc:	f7 94       	ror	r15
    17de:	e7 94       	ror	r14
    17e0:	8a 95       	dec	r24
    17e2:	d1 f7       	brne	.-12     	; 0x17d8 <__pack_f+0x164>
    17e4:	05 c0       	rjmp	.+10     	; 0x17f0 <__pack_f+0x17c>
    17e6:	ee 24       	eor	r14, r14
    17e8:	ff 24       	eor	r15, r15
    17ea:	87 01       	movw	r16, r14
    17ec:	ef ef       	ldi	r30, 0xFF	; 255
    17ee:	f0 e0       	ldi	r31, 0x00	; 0
    17f0:	6e 2f       	mov	r22, r30
    17f2:	67 95       	ror	r22
    17f4:	66 27       	eor	r22, r22
    17f6:	67 95       	ror	r22
    17f8:	90 2f       	mov	r25, r16
    17fa:	9f 77       	andi	r25, 0x7F	; 127
    17fc:	d7 94       	ror	r13
    17fe:	dd 24       	eor	r13, r13
    1800:	d7 94       	ror	r13
    1802:	8e 2f       	mov	r24, r30
    1804:	86 95       	lsr	r24
    1806:	49 2f       	mov	r20, r25
    1808:	46 2b       	or	r20, r22
    180a:	58 2f       	mov	r21, r24
    180c:	5d 29       	or	r21, r13
    180e:	b7 01       	movw	r22, r14
    1810:	ca 01       	movw	r24, r20
    1812:	1f 91       	pop	r17
    1814:	0f 91       	pop	r16
    1816:	ff 90       	pop	r15
    1818:	ef 90       	pop	r14
    181a:	df 90       	pop	r13
    181c:	08 95       	ret

0000181e <__unpack_f>:
    181e:	fc 01       	movw	r30, r24
    1820:	db 01       	movw	r26, r22
    1822:	40 81       	ld	r20, Z
    1824:	51 81       	ldd	r21, Z+1	; 0x01
    1826:	22 81       	ldd	r18, Z+2	; 0x02
    1828:	62 2f       	mov	r22, r18
    182a:	6f 77       	andi	r22, 0x7F	; 127
    182c:	70 e0       	ldi	r23, 0x00	; 0
    182e:	22 1f       	adc	r18, r18
    1830:	22 27       	eor	r18, r18
    1832:	22 1f       	adc	r18, r18
    1834:	93 81       	ldd	r25, Z+3	; 0x03
    1836:	89 2f       	mov	r24, r25
    1838:	88 0f       	add	r24, r24
    183a:	82 2b       	or	r24, r18
    183c:	28 2f       	mov	r18, r24
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	99 1f       	adc	r25, r25
    1842:	99 27       	eor	r25, r25
    1844:	99 1f       	adc	r25, r25
    1846:	11 96       	adiw	r26, 0x01	; 1
    1848:	9c 93       	st	X, r25
    184a:	11 97       	sbiw	r26, 0x01	; 1
    184c:	21 15       	cp	r18, r1
    184e:	31 05       	cpc	r19, r1
    1850:	a9 f5       	brne	.+106    	; 0x18bc <__unpack_f+0x9e>
    1852:	41 15       	cp	r20, r1
    1854:	51 05       	cpc	r21, r1
    1856:	61 05       	cpc	r22, r1
    1858:	71 05       	cpc	r23, r1
    185a:	11 f4       	brne	.+4      	; 0x1860 <__unpack_f+0x42>
    185c:	82 e0       	ldi	r24, 0x02	; 2
    185e:	37 c0       	rjmp	.+110    	; 0x18ce <__unpack_f+0xb0>
    1860:	82 e8       	ldi	r24, 0x82	; 130
    1862:	9f ef       	ldi	r25, 0xFF	; 255
    1864:	13 96       	adiw	r26, 0x03	; 3
    1866:	9c 93       	st	X, r25
    1868:	8e 93       	st	-X, r24
    186a:	12 97       	sbiw	r26, 0x02	; 2
    186c:	9a 01       	movw	r18, r20
    186e:	ab 01       	movw	r20, r22
    1870:	67 e0       	ldi	r22, 0x07	; 7
    1872:	22 0f       	add	r18, r18
    1874:	33 1f       	adc	r19, r19
    1876:	44 1f       	adc	r20, r20
    1878:	55 1f       	adc	r21, r21
    187a:	6a 95       	dec	r22
    187c:	d1 f7       	brne	.-12     	; 0x1872 <__unpack_f+0x54>
    187e:	83 e0       	ldi	r24, 0x03	; 3
    1880:	8c 93       	st	X, r24
    1882:	0d c0       	rjmp	.+26     	; 0x189e <__unpack_f+0x80>
    1884:	22 0f       	add	r18, r18
    1886:	33 1f       	adc	r19, r19
    1888:	44 1f       	adc	r20, r20
    188a:	55 1f       	adc	r21, r21
    188c:	12 96       	adiw	r26, 0x02	; 2
    188e:	8d 91       	ld	r24, X+
    1890:	9c 91       	ld	r25, X
    1892:	13 97       	sbiw	r26, 0x03	; 3
    1894:	01 97       	sbiw	r24, 0x01	; 1
    1896:	13 96       	adiw	r26, 0x03	; 3
    1898:	9c 93       	st	X, r25
    189a:	8e 93       	st	-X, r24
    189c:	12 97       	sbiw	r26, 0x02	; 2
    189e:	20 30       	cpi	r18, 0x00	; 0
    18a0:	80 e0       	ldi	r24, 0x00	; 0
    18a2:	38 07       	cpc	r19, r24
    18a4:	80 e0       	ldi	r24, 0x00	; 0
    18a6:	48 07       	cpc	r20, r24
    18a8:	80 e4       	ldi	r24, 0x40	; 64
    18aa:	58 07       	cpc	r21, r24
    18ac:	58 f3       	brcs	.-42     	; 0x1884 <__unpack_f+0x66>
    18ae:	14 96       	adiw	r26, 0x04	; 4
    18b0:	2d 93       	st	X+, r18
    18b2:	3d 93       	st	X+, r19
    18b4:	4d 93       	st	X+, r20
    18b6:	5c 93       	st	X, r21
    18b8:	17 97       	sbiw	r26, 0x07	; 7
    18ba:	08 95       	ret
    18bc:	2f 3f       	cpi	r18, 0xFF	; 255
    18be:	31 05       	cpc	r19, r1
    18c0:	79 f4       	brne	.+30     	; 0x18e0 <__unpack_f+0xc2>
    18c2:	41 15       	cp	r20, r1
    18c4:	51 05       	cpc	r21, r1
    18c6:	61 05       	cpc	r22, r1
    18c8:	71 05       	cpc	r23, r1
    18ca:	19 f4       	brne	.+6      	; 0x18d2 <__unpack_f+0xb4>
    18cc:	84 e0       	ldi	r24, 0x04	; 4
    18ce:	8c 93       	st	X, r24
    18d0:	08 95       	ret
    18d2:	64 ff       	sbrs	r22, 4
    18d4:	03 c0       	rjmp	.+6      	; 0x18dc <__unpack_f+0xbe>
    18d6:	81 e0       	ldi	r24, 0x01	; 1
    18d8:	8c 93       	st	X, r24
    18da:	12 c0       	rjmp	.+36     	; 0x1900 <__unpack_f+0xe2>
    18dc:	1c 92       	st	X, r1
    18de:	10 c0       	rjmp	.+32     	; 0x1900 <__unpack_f+0xe2>
    18e0:	2f 57       	subi	r18, 0x7F	; 127
    18e2:	30 40       	sbci	r19, 0x00	; 0
    18e4:	13 96       	adiw	r26, 0x03	; 3
    18e6:	3c 93       	st	X, r19
    18e8:	2e 93       	st	-X, r18
    18ea:	12 97       	sbiw	r26, 0x02	; 2
    18ec:	83 e0       	ldi	r24, 0x03	; 3
    18ee:	8c 93       	st	X, r24
    18f0:	87 e0       	ldi	r24, 0x07	; 7
    18f2:	44 0f       	add	r20, r20
    18f4:	55 1f       	adc	r21, r21
    18f6:	66 1f       	adc	r22, r22
    18f8:	77 1f       	adc	r23, r23
    18fa:	8a 95       	dec	r24
    18fc:	d1 f7       	brne	.-12     	; 0x18f2 <__unpack_f+0xd4>
    18fe:	70 64       	ori	r23, 0x40	; 64
    1900:	14 96       	adiw	r26, 0x04	; 4
    1902:	4d 93       	st	X+, r20
    1904:	5d 93       	st	X+, r21
    1906:	6d 93       	st	X+, r22
    1908:	7c 93       	st	X, r23
    190a:	17 97       	sbiw	r26, 0x07	; 7
    190c:	08 95       	ret

0000190e <__fpcmp_parts_f>:
    190e:	1f 93       	push	r17
    1910:	dc 01       	movw	r26, r24
    1912:	fb 01       	movw	r30, r22
    1914:	9c 91       	ld	r25, X
    1916:	92 30       	cpi	r25, 0x02	; 2
    1918:	08 f4       	brcc	.+2      	; 0x191c <__fpcmp_parts_f+0xe>
    191a:	47 c0       	rjmp	.+142    	; 0x19aa <__fpcmp_parts_f+0x9c>
    191c:	80 81       	ld	r24, Z
    191e:	82 30       	cpi	r24, 0x02	; 2
    1920:	08 f4       	brcc	.+2      	; 0x1924 <__fpcmp_parts_f+0x16>
    1922:	43 c0       	rjmp	.+134    	; 0x19aa <__fpcmp_parts_f+0x9c>
    1924:	94 30       	cpi	r25, 0x04	; 4
    1926:	51 f4       	brne	.+20     	; 0x193c <__fpcmp_parts_f+0x2e>
    1928:	11 96       	adiw	r26, 0x01	; 1
    192a:	1c 91       	ld	r17, X
    192c:	84 30       	cpi	r24, 0x04	; 4
    192e:	99 f5       	brne	.+102    	; 0x1996 <__fpcmp_parts_f+0x88>
    1930:	81 81       	ldd	r24, Z+1	; 0x01
    1932:	68 2f       	mov	r22, r24
    1934:	70 e0       	ldi	r23, 0x00	; 0
    1936:	61 1b       	sub	r22, r17
    1938:	71 09       	sbc	r23, r1
    193a:	3f c0       	rjmp	.+126    	; 0x19ba <__fpcmp_parts_f+0xac>
    193c:	84 30       	cpi	r24, 0x04	; 4
    193e:	21 f0       	breq	.+8      	; 0x1948 <__fpcmp_parts_f+0x3a>
    1940:	92 30       	cpi	r25, 0x02	; 2
    1942:	31 f4       	brne	.+12     	; 0x1950 <__fpcmp_parts_f+0x42>
    1944:	82 30       	cpi	r24, 0x02	; 2
    1946:	b9 f1       	breq	.+110    	; 0x19b6 <__fpcmp_parts_f+0xa8>
    1948:	81 81       	ldd	r24, Z+1	; 0x01
    194a:	88 23       	and	r24, r24
    194c:	89 f1       	breq	.+98     	; 0x19b0 <__fpcmp_parts_f+0xa2>
    194e:	2d c0       	rjmp	.+90     	; 0x19aa <__fpcmp_parts_f+0x9c>
    1950:	11 96       	adiw	r26, 0x01	; 1
    1952:	1c 91       	ld	r17, X
    1954:	11 97       	sbiw	r26, 0x01	; 1
    1956:	82 30       	cpi	r24, 0x02	; 2
    1958:	f1 f0       	breq	.+60     	; 0x1996 <__fpcmp_parts_f+0x88>
    195a:	81 81       	ldd	r24, Z+1	; 0x01
    195c:	18 17       	cp	r17, r24
    195e:	d9 f4       	brne	.+54     	; 0x1996 <__fpcmp_parts_f+0x88>
    1960:	12 96       	adiw	r26, 0x02	; 2
    1962:	2d 91       	ld	r18, X+
    1964:	3c 91       	ld	r19, X
    1966:	13 97       	sbiw	r26, 0x03	; 3
    1968:	82 81       	ldd	r24, Z+2	; 0x02
    196a:	93 81       	ldd	r25, Z+3	; 0x03
    196c:	82 17       	cp	r24, r18
    196e:	93 07       	cpc	r25, r19
    1970:	94 f0       	brlt	.+36     	; 0x1996 <__fpcmp_parts_f+0x88>
    1972:	28 17       	cp	r18, r24
    1974:	39 07       	cpc	r19, r25
    1976:	bc f0       	brlt	.+46     	; 0x19a6 <__fpcmp_parts_f+0x98>
    1978:	14 96       	adiw	r26, 0x04	; 4
    197a:	8d 91       	ld	r24, X+
    197c:	9d 91       	ld	r25, X+
    197e:	0d 90       	ld	r0, X+
    1980:	bc 91       	ld	r27, X
    1982:	a0 2d       	mov	r26, r0
    1984:	24 81       	ldd	r18, Z+4	; 0x04
    1986:	35 81       	ldd	r19, Z+5	; 0x05
    1988:	46 81       	ldd	r20, Z+6	; 0x06
    198a:	57 81       	ldd	r21, Z+7	; 0x07
    198c:	28 17       	cp	r18, r24
    198e:	39 07       	cpc	r19, r25
    1990:	4a 07       	cpc	r20, r26
    1992:	5b 07       	cpc	r21, r27
    1994:	18 f4       	brcc	.+6      	; 0x199c <__fpcmp_parts_f+0x8e>
    1996:	11 23       	and	r17, r17
    1998:	41 f0       	breq	.+16     	; 0x19aa <__fpcmp_parts_f+0x9c>
    199a:	0a c0       	rjmp	.+20     	; 0x19b0 <__fpcmp_parts_f+0xa2>
    199c:	82 17       	cp	r24, r18
    199e:	93 07       	cpc	r25, r19
    19a0:	a4 07       	cpc	r26, r20
    19a2:	b5 07       	cpc	r27, r21
    19a4:	40 f4       	brcc	.+16     	; 0x19b6 <__fpcmp_parts_f+0xa8>
    19a6:	11 23       	and	r17, r17
    19a8:	19 f0       	breq	.+6      	; 0x19b0 <__fpcmp_parts_f+0xa2>
    19aa:	61 e0       	ldi	r22, 0x01	; 1
    19ac:	70 e0       	ldi	r23, 0x00	; 0
    19ae:	05 c0       	rjmp	.+10     	; 0x19ba <__fpcmp_parts_f+0xac>
    19b0:	6f ef       	ldi	r22, 0xFF	; 255
    19b2:	7f ef       	ldi	r23, 0xFF	; 255
    19b4:	02 c0       	rjmp	.+4      	; 0x19ba <__fpcmp_parts_f+0xac>
    19b6:	60 e0       	ldi	r22, 0x00	; 0
    19b8:	70 e0       	ldi	r23, 0x00	; 0
    19ba:	cb 01       	movw	r24, r22
    19bc:	1f 91       	pop	r17
    19be:	08 95       	ret

000019c0 <__prologue_saves__>:
    19c0:	2f 92       	push	r2
    19c2:	3f 92       	push	r3
    19c4:	4f 92       	push	r4
    19c6:	5f 92       	push	r5
    19c8:	6f 92       	push	r6
    19ca:	7f 92       	push	r7
    19cc:	8f 92       	push	r8
    19ce:	9f 92       	push	r9
    19d0:	af 92       	push	r10
    19d2:	bf 92       	push	r11
    19d4:	cf 92       	push	r12
    19d6:	df 92       	push	r13
    19d8:	ef 92       	push	r14
    19da:	ff 92       	push	r15
    19dc:	0f 93       	push	r16
    19de:	1f 93       	push	r17
    19e0:	cf 93       	push	r28
    19e2:	df 93       	push	r29
    19e4:	cd b7       	in	r28, 0x3d	; 61
    19e6:	de b7       	in	r29, 0x3e	; 62
    19e8:	ca 1b       	sub	r28, r26
    19ea:	db 0b       	sbc	r29, r27
    19ec:	0f b6       	in	r0, 0x3f	; 63
    19ee:	f8 94       	cli
    19f0:	de bf       	out	0x3e, r29	; 62
    19f2:	0f be       	out	0x3f, r0	; 63
    19f4:	cd bf       	out	0x3d, r28	; 61
    19f6:	19 94       	eijmp

000019f8 <__epilogue_restores__>:
    19f8:	2a 88       	ldd	r2, Y+18	; 0x12
    19fa:	39 88       	ldd	r3, Y+17	; 0x11
    19fc:	48 88       	ldd	r4, Y+16	; 0x10
    19fe:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a00:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a02:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a04:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a06:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a08:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a0a:	b9 84       	ldd	r11, Y+9	; 0x09
    1a0c:	c8 84       	ldd	r12, Y+8	; 0x08
    1a0e:	df 80       	ldd	r13, Y+7	; 0x07
    1a10:	ee 80       	ldd	r14, Y+6	; 0x06
    1a12:	fd 80       	ldd	r15, Y+5	; 0x05
    1a14:	0c 81       	ldd	r16, Y+4	; 0x04
    1a16:	1b 81       	ldd	r17, Y+3	; 0x03
    1a18:	aa 81       	ldd	r26, Y+2	; 0x02
    1a1a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a1c:	ce 0f       	add	r28, r30
    1a1e:	d1 1d       	adc	r29, r1
    1a20:	0f b6       	in	r0, 0x3f	; 63
    1a22:	f8 94       	cli
    1a24:	de bf       	out	0x3e, r29	; 62
    1a26:	0f be       	out	0x3f, r0	; 63
    1a28:	cd bf       	out	0x3d, r28	; 61
    1a2a:	ed 01       	movw	r28, r26
    1a2c:	08 95       	ret

00001a2e <_exit>:
    1a2e:	f8 94       	cli

00001a30 <__stop_program>:
    1a30:	ff cf       	rjmp	.-2      	; 0x1a30 <__stop_program>
